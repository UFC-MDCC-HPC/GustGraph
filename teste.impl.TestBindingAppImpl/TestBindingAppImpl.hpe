<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009fac48bc8d569fb5fb40780e97a1aa3236e6adffd8d7c04ed84280b4cc196a4c2b6bb6b57c1e264d86baad985bd050b4a3f6d563e273e579142becac62265842067fb0c0ab70cb4d34a1163108b84c7fc432fdc186ef187882d06c54de0fc3734ff50d765b190a4520a27ca1909168f1d0a81b63932c69b19cb88408f88708a9" isAbstract="false" kind="Application" name="TestBindingAppImpl" packagePath="teste.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000093a5f79db5954f0d46348038c4c3277b51c559f7e19a71f82b7ce432dadd0f5cb2dc5fc84360b3445aac48286a660d58df853e20e9d74b7033f4c4bc20cf5b6b01b99d4a705b97f7c6af115b5deadf7c97371e250fd9000cad1d11c692b7399c8de2b289cdbab441a7dadf78acaedd6eacc418380a3f75a0b1326b94993df6af" localRef="base" location="teste.TestBindingApp/TestBindingApp.hpe" name="TestBindingApp" package="teste" version="1.0.0.0">
        <visualDescription h="60" w="100" x="266" y="331">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="true" uRef="left_unit">
          <visualDescription h="20" w="20" x="12" y="21"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="right_unit">
          <visualDescription h="20" w="20" x="67" y="20"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="ILeftUnitImpl" nArgs="0">
      <slice isRef="binding">
        <originRef cRef="binding" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="52" y="21"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using teste.TestBindingApp;&#xA;&#xA;&#xA;namespace teste.impl.TestBindingAppImpl &#xA;{&#xA;&#x9;public abstract class BaseILeftUnitImpl: Application, BaseILeftUnit&#xA;&#x9;{&#xA;&#x9;&#x9;private IChannel binding = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Binding&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.binding == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.binding = (IChannel) Services.getPort(&quot;binding&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.binding;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseILeftUnitImpl.cs" srcType="base" uri="teste.impl.TestBindingAppImpl/bin/1.0.0.0/BaseILeftUnitImpl.dll" versionId="1.0.0.0">
          <dependency>teste.Binding/bin/1.0.0.0/IPeerLeft.dll</dependency>
          <dependency>teste.TestBindingApp/bin/1.0.0.0/BaseILeftUnit.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using teste.TestBindingApp;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;&#xA;namespace teste.impl.TestBindingAppImpl&#xA;{&#xA;&#x9;public class ILeftUnitImpl : BaseILeftUnitImpl, ILeftUnit&#xA;&#x9;{&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;: HELLO ! I AM LEFT !&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;//Thread.Sleep (10000);&#xA;&#x9;&#x9;&#x9;string s = this.PeerRank + &quot; --- Hello from LEFT to RIGHT &quot;;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- BEGIN left sent &quot; + s + &quot; to &lt;1,&quot; + this.PeerRank + &quot;>&quot;);&#xA;&#xA;/*&#x9;&#x9;&#x9;// SEND ARRAY&#xA;&#x9;&#x9;&#x9;this.Binding.Send&lt;string> (new string[1]{s + &quot; 0&quot;}, new Tuple&lt;int,int> (1, this.PeerRank), 0);&#xA;&#x9;&#x9;&#x9;this.Binding.Send&lt;string> (new string[1]{s + &quot; 1&quot;}, new Tuple&lt;int,int> (1, this.PeerRank), 1);&#xA;&#xA;&#x9;&#x9;&#x9;// SEND SINGLETON&#xA;&#x9;&#x9;&#x9;this.Binding.Send&lt;string> (s + &quot; 2&quot;, new Tuple&lt;int,int> (1, this.PeerRank), 2);&#xA;&#x9;&#x9;&#x9;this.Binding.Send&lt;string> (s + &quot; 3&quot;, new Tuple&lt;int,int> (1, this.PeerRank), 3);&#xA;*/&#xA;&#x9;&#x9;&#x9;// SEND IMMEDIATE ARRAY&#xA;&#x9;&#x9;&#x9;Request r0 = this.Binding.ImmediateSend&lt;string> (new string[1]{s + &quot; 0 - immediate&quot;}, new Tuple&lt;int,int> (1, this.PeerRank), 44);&#xA;&#x9;&#x9;&#x9;Request r1 = this.Binding.ImmediateSend&lt;string> (new string[1]{s + &quot; 1 - immediate&quot;}, new Tuple&lt;int,int> (1, this.PeerRank), 55);&#xA;&#xA;&#x9;&#x9;&#x9;// SEND IMMEDIATE SINGLETON&#xA;&#x9;&#x9;&#x9;Request r2 = this.Binding.ImmediateSend&lt;string> (s + &quot; 2 - immediate&quot;, new Tuple&lt;int,int> (1, this.PeerRank), 66);&#xA;&#x9;&#x9;&#x9;Request r3 = this.Binding.ImmediateSend&lt;string> (s + &quot; 3 - immediate&quot;, new Tuple&lt;int,int> (1, this.PeerRank), 77);&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus t0 = r0.Wait ();&#xA;&#x9;&#x9;&#x9;CompletedStatus t1 = r1.Wait ();&#xA;&#x9;&#x9;&#x9;CompletedStatus t2 = r2.Wait ();&#xA;&#x9;&#x9;&#x9;CompletedStatus t3 = r3.Wait ();&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- END   left sent &quot; + s + &quot; to &lt;1,&quot;&#xA;&#x9;&#x9;&#x9;                   + t0.Source + &quot;/&quot; + t0.Tag + &quot;/&quot; + t0.Cancelled + &quot;/&quot; + t0.Count() + &quot;-&quot; &#xA;&#x9;&#x9;&#x9;                   + t1.Source + &quot;/&quot; + t1.Tag + &quot;/&quot; + t0.Cancelled + &quot;/&quot; + t0.Count() + &quot;-&quot; &#xA;&#x9;&#x9;&#x9;                   + t2.Source + &quot;/&quot; + t2.Tag + &quot;/&quot; + t0.Cancelled + &quot;/&quot; + t0.Count() + &quot;-&quot; &#xA;&#x9;&#x9;&#x9;                   + t3.Source + &quot;/&quot; + t3.Tag + &quot;/&quot; + t0.Cancelled + &quot;/&quot; + t0.Count() + &quot;>&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ILeftUnitImpl.cs" srcType="user" uri="teste.impl.TestBindingAppImpl/bin/1.0.0.0/ILeftUnitImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/teste.impl.TestBindingAppImpl/bin/1.0.0.0/BaseILeftUnitImpl.dll</dependency>
          <dependency>teste.TestBindingApp/bin/1.0.0.0/ILeftUnit.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="131" x="66" y="137">
        <color b="203" g="192" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IRightUnitImpl" nArgs="0">
      <slice isRef="binding">
        <originRef cRef="binding" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="0" y="29"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using teste.TestBindingApp;&#xA;&#xA;namespace teste.impl.TestBindingAppImpl &#xA;{&#xA;&#x9;public abstract class BaseIRightUnitImpl: Application, BaseIRightUnit&#xA;&#x9;{&#xA;&#x9;&#x9;private IChannel binding = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Binding&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.binding == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.binding = (IChannel) Services.getPort(&quot;binding&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.binding;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIRightUnitImpl.cs" srcType="base" uri="teste.impl.TestBindingAppImpl/bin/1.0.0.0/BaseIRightUnitImpl.dll" versionId="1.0.0.0">
          <dependency>teste.Binding/bin/1.0.0.0/IPeerRight.dll</dependency>
          <dependency>teste.TestBindingApp/bin/1.0.0.0/BaseIRightUnit.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using teste.TestBindingApp;&#xA;//using MPI;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;&#xA;namespace teste.impl.TestBindingAppImpl&#xA;{&#xA;&#x9;public class IRightUnitImpl : BaseIRightUnitImpl, IRightUnit&#xA;&#x9;{&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;Console.WriteLine(this.PeerRank + &quot;: HELLO ! I AM RIGHT !!!&quot;);&#xA;&#xA;/*&#x9;&#x9;&#x9;// RECEIVE ARRAY&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source0 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;string[] s0 = new string[1]; this.Binding.Receive&lt;string> (source0, 0, ref s0);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s0 + &quot; from &quot; + source0);&#xA;&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source1 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;string[] s1 = new string[1]; this.Binding.Receive&lt;string> (source1, 1, ref s1);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s1 + &quot; from &quot; + source1);&#xA;&#xA;&#x9;&#x9;&#x9;// RECEIVE SINGLETON&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source2 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;string s2 = this.Binding.Receive&lt;string> (source2, 2);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s2 + &quot; from &quot; + source2);&#xA;&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source3 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;string s3 = this.Binding.Receive&lt;string> (source3, 3);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s3 + &quot; from &quot; + source3);&#xA;*/&#xA;&#x9;&#x9;&#x9;// -------------------------------&#xA;&#xA;&#x9;&#x9;&#x9;// RECEIVE IMMEDIATE ARRAY&#xA;&#x9;&#x9;&#x9;string[] b0 = new string[1];&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source4 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;ReceiveRequest r0 = this.Binding.ImmediateReceive&lt;string> (source4, 44, b0);&#xA;&#xA;&#x9;&#x9;&#x9;string[] b1 = new string[1];&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source5 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;ReceiveRequest r1 = this.Binding.ImmediateReceive&lt;string> (source5, 55, b1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// RECEIVE IMMEDIATE SINGLETON&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source6 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;ReceiveRequest r2 = this.Binding.ImmediateReceive&lt;string> (source6, 66);&#xA;&#xA;&#x9;&#x9;&#x9;Tuple&lt;int,int> source7 = new Tuple&lt;int,int> (0, this.PeerRank);&#xA;&#x9;&#x9;&#x9;ReceiveRequest r3 = this.Binding.ImmediateReceive&lt;string> (source7, 77);&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus t0 = r0.Wait ();&#xA;&#x9;&#x9;&#x9;string[] s4 = r0.GetValue () as string[];&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + b0[0] + &quot; from &quot; + t0.Source + &quot; tag=&quot; + t0.Tag + &quot; cancelled=&quot; + t0.Cancelled + &quot; count=&quot; + t0.Count());&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus t1 = r1.Wait ();&#xA;&#x9;&#x9;&#x9;string[] s5 = r1.GetValue () as string[];&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + b1[0] + &quot; from &quot; + t1.Source + &quot; tag=&quot; + t1.Tag + &quot; cancelled=&quot; + t1.Cancelled + &quot; count=&quot; + t1.Count());&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus t2 = r2.Wait ();&#xA;&#x9;&#x9;&#x9;string s6 = r2.GetValue () as string;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s6 + &quot; from &quot; + t2.Source + &quot; tag=&quot; + t2.Tag + &quot; cancelled=&quot; + t2.Cancelled + &quot; count=&quot; + t2.Count());&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus t3 = r3.Wait ();&#xA;&#x9;&#x9;&#x9;string s7 = r3.GetValue () as string;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.PeerRank + &quot;- RECEIVED right &quot;  + s7 + &quot; from &quot; + t3.Source + &quot; tag=&quot; + t3.Tag + &quot; cancelled=&quot; + t3.Cancelled + &quot; count=&quot; + t3.Count());&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="IRightUnitImpl.cs" srcType="user" uri="teste.impl.TestBindingAppImpl/bin/1.0.0.0/IRightUnitImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/teste.impl.TestBindingAppImpl/bin/1.0.0.0/BaseIRightUnitImpl.dll</dependency>
          <dependency>teste.TestBindingApp/bin/1.0.0.0/IRightUnit.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="146" x="365" y="127">
        <color b="230" g="216" r="173"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="ILeftUnitImpl" multiple="true" private="false" replica="0" uRef="left_unit" visibleInterface="true">
      <super cRef="base" uRef="left_unit"/>
      <visualDescription h="40" w="80" x="66" y="267"/>
    </unit>
    <unit facet="0" iRef="IRightUnitImpl" multiple="true" private="false" replica="0" uRef="right_unit" visibleInterface="true">
      <super cRef="base" uRef="right_unit"/>
      <visualDescription h="40" w="80" x="438" y="253"/>
    </unit>
  </componentInfo>
</component:component>