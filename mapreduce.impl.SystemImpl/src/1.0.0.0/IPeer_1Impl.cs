// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;
using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSink;
using br.ufc.pargo.hpe.kinds;
using System.Threading;
using mapreduce.System;
using System;
using br.ufc.mdcc.common.String;
using br.ufc.mdcc.common.Integer;


namespace mapreduce.impl.SystemImpl {
    
    
	public class IPeer_1Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_1 {
        
        private void Go(object o) {
			Console.WriteLine (this.GlobalRank + ": BEGIN GO - MY TYPE IS " + o.GetType());
            ((Activate)(o)).go();
			Console.WriteLine (this.GlobalRank + ": END GO - MY TYPE IS " + o.GetType());
        }
        
        public override void main() {
            IDataSink<br.ufc.mdcc.common.Platform.IPlatform> data_sink = ((IDataSink<br.ufc.mdcc.common.Platform.IPlatform>)(this.Services.getPort("data_sink")));
			Console.WriteLine ("SINK 1");
			Thread go_data_sink = new Thread (new ParameterizedThreadStart(this.Go));
			Console.WriteLine ("SINK 2");
            go_data_sink.Start(data_sink);	
			Console.WriteLine ("SINK 3");
			ISplitterWriteSink<IString,IInteger> splitter = ((ISplitterWriteSink<IString,IInteger>)(this.Services.getPort("splitter")));
			Console.WriteLine ("SINK 4");
			Thread go_splitter = new Thread (new ParameterizedThreadStart(this.Go));
			Console.WriteLine ("SINK 5");
            go_splitter.Start(splitter);
			Console.WriteLine ("SINK 6");
            go_data_sink.Join();
            go_splitter.Join(); 
        }
    }
}
