<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007172dd0c819cba40ca68d46fe79f0c4caee61d1200508039d29b155064de6928a2e88ae3b249c22097cacd437c4103f7c15f358f4f6db20fad7b4b784f1bcc37ee5f9157b1562e8d9dbac92c43c39da588de404c5b1bb97b398595fa1876f40f7d61d0c467053294b617adc157369cfb68dfc5c023cf44ff29377caad4d576d6" isAbstract="false" kind="Application" name="SystemImpl" packagePath="mapreduce.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000b997c4ad702c93ea26c383df160c821dc2b024e664a57df5f6a68a9a0ea7a182b32b0622fdb11b4da0354a83476ebde6d4b9188657628fa58e94d543c45e5c98a47573892a15119bb7364538be393216b8d158bd7b7cd671939196d7e673bbf9b061cab5c75322a5bb632c6d72861077f859f69e01533a425586a5a72324b3bb" localRef="base" location="mapreduce.System/System.hpe" name="System" package="mapreduce" version="1.0.0.0">
        <visualDescription h="150" w="250" x="82" y="59">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="false" uRef="peer_0">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="peer_1">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="peer_2">
          <visualDescription h="20" w="20" x="51" y="2"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="peer_3">
          <visualDescription h="20" w="20" x="74" y="2"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="root">
          <visualDescription h="20" w="20" x="97" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IPeer_0Impl" nArgs="0">
      <slice isRef="platform_data">
        <originRef cRef="platform_data" iRef="IProcessingNode"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="data_source">
        <originRef cRef="data_source" iRef="IDataSource"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterReadSource"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="&#x9;// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSource;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using System.Threading;&#xA;using mapreduce.System;&#xA;&#xA;&#xA;namespace mapreduce.impl.SystemImpl {&#xA;    &#xA;    &#xA;&#x9;public class IPeer_0Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_0  {&#xA;        &#xA;        private void Go(object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IDataSource&lt;br.ufc.mdcc.common.Platform.IPlatform> data_source = ((IDataSource&lt;br.ufc.mdcc.common.Platform.IPlatform>)(this.Services.getPort(&quot;data_source&quot;)));&#xA;&#x9;&#x9;&#x9;Thread go_data_source = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_data_source.Start(data_source);&#xA;            ISplitterReadSource&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>> splitter = ((ISplitterReadSource&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;&#x9;&#x9;&#x9;Thread go_splitter = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_source.Join();&#xA;            go_splitter.Join(); &#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_0Impl.cs" srcType="user" uri="mapreduce.impl.SystemImpl/bin/1.0.0.0/IPeer_0Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="10" y="10">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="input_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="reader" sRef="data_source"/>
      </port>
      <port name="input_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="source" sRef="splitter"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="splitter"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="splitter"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_1Impl" nArgs="0">
      <slice isRef="platform_data">
        <originRef cRef="platform_data" iRef="IProcessingNode"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="data_sink">
        <originRef cRef="data_sink" iRef="IDataSink"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterWriteSink"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSink;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using System.Threading;&#xA;using mapreduce.System;&#xA;using System;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;&#xA;namespace mapreduce.impl.SystemImpl {&#xA;    &#xA;    &#xA;&#x9;public class IPeer_1Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_1 {&#xA;        &#xA;        private void Go(object o) {&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.GlobalRank + &quot;: BEGIN GO - MY TYPE IS &quot; + o.GetType());&#xA;            ((Activate)(o)).go();&#xA;&#x9;&#x9;&#x9;Console.WriteLine (this.GlobalRank + &quot;: END GO - MY TYPE IS &quot; + o.GetType());&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IDataSink&lt;br.ufc.mdcc.common.Platform.IPlatform> data_sink = ((IDataSink&lt;br.ufc.mdcc.common.Platform.IPlatform>)(this.Services.getPort(&quot;data_sink&quot;)));&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 1&quot;);&#xA;&#x9;&#x9;&#x9;Thread go_data_sink = new Thread (new ParameterizedThreadStart(this.Go));&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 2&quot;);&#xA;            go_data_sink.Start(data_sink);&#x9;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 3&quot;);&#xA;&#x9;&#x9;&#x9;ISplitterWriteSink&lt;IString,IInteger> splitter = ((ISplitterWriteSink&lt;IString,IInteger>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 4&quot;);&#xA;&#x9;&#x9;&#x9;Thread go_splitter = new Thread (new ParameterizedThreadStart(this.Go));&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 5&quot;);&#xA;            go_splitter.Start(splitter);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SINK 6&quot;);&#xA;            go_data_sink.Join();&#xA;            go_splitter.Join(); &#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_1Impl.cs" srcType="user" uri="mapreduce.impl.SystemImpl/bin/1.0.0.0/IPeer_1Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="10" y="10">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="output_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="writer" sRef="data_sink"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="splitter"/>
      </port>
      <port name="output_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="sink" sRef="splitter"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_2Impl" nArgs="0">
      <slice isRef="platform_map">
        <originRef cRef="platform_map" iRef="IProcessingNode"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="mapper">
        <originRef cRef="mapper" iRef="IMapper"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterMapFeeder"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="shuffler">
        <originRef cRef="shuffler" iRef="IShufflerMapCollector"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.computation.Mapper;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using System.Threading;&#xA;using mapreduce.System;&#xA;using System;&#xA;&#xA;&#xA;namespace mapreduce.impl.SystemImpl {&#xA;    &#xA;    &#xA;&#x9;public class IPeer_2Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_2 {&#xA;        &#xA;        private void Go(object o) &#xA;&#x9;&#x9;{&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SYSTEM - CONNECTING TO MAPPER 1!&quot;);&#xA;&#x9;&#x9;&#x9;var mapper_slice = this.Services.getPort(&quot;mapper&quot;);&#xA;&#x9;&#x9;&#x9;IMapper&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger,br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter> mapper = (IMapper&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger,br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter>) mapper_slice;&#xA;&#x9;&#x9;&#x9;Thread go_mapper = new Thread (new ParameterizedThreadStart(this.Go));&#xA;&#x9;&#x9;&#x9;go_mapper.Start(mapper);&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SYSTEM - CONNECTING TO SPLITTER !&quot;);&#xA;&#x9;&#x9;&#x9;var splitter_slice = this.Services.getPort(&quot;splitter&quot;);&#xA;&#x9;&#x9;&#x9;ISplitterMapFeeder&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString> splitter = (ISplitterMapFeeder&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString>) splitter_slice;&#xA;&#x9;&#x9;&#x9;Thread go_splitter = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SYSTEM - CONNECTING TO SHUFFLER 1 !&quot;);&#xA;&#x9;&#x9;&#x9;var shuffler_slice = this.Services.getPort(&quot;shuffler&quot;);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;SYSTEM - CONNECTING TO SHUFFLER 2 !&quot;);&#xA;&#x9;&#x9;&#x9;IShufflerMapCollector&lt;br.ufc.mdcc.common.String.IString,br.ufc.mdcc.common.Integer.IInteger,br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>> shuffler = (IShufflerMapCollector&lt;br.ufc.mdcc.common.String.IString,br.ufc.mdcc.common.Integer.IInteger,br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>>) shuffler_slice;&#xA;&#x9;&#x9;&#x9;Thread go_shuffler = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;MAPPER, SPLITTER and SHUFFLER started !&quot;);&#xA;&#xA;            go_mapper.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join(); &#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;MAPPER, SPLITTER and SHUFFLER joined !&quot;);&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_2Impl.cs" srcType="user" uri="mapreduce.impl.SystemImpl/bin/1.0.0.0/IPeer_2Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="10" y="10">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="intermediate_pairs_local">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="mapper"/>
      </port>
      <port name="task_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_map" sRef="mapper"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="mapper"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="splitter"/>
      </port>
      <port name="task_binding_split_next">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_next" sRef="splitter"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="splitter"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="splitter"/>
      </port>
      <port name="task_binding_shuffle">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle" sRef="shuffler"/>
      </port>
      <port name="intermediate_pairs_local">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="shuffler"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_3Impl" nArgs="0">
      <slice isRef="platform_reduce">
        <originRef cRef="platform_reduce" iRef="IProcessingNode"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="reducer">
        <originRef cRef="reducer" iRef="IReducer"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterReduceCollector"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <slice isRef="shuffler">
        <originRef cRef="shuffler" iRef="IShufflerReduceFeeder"/>
        <visualDescription h="10" w="15" x="10" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.computation.Reducer;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using System.Threading;&#xA;using mapreduce.System;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;&#xA;namespace mapreduce.impl.SystemImpl {&#xA;    &#xA;    &#xA;&#x9;public class IPeer_3Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_3 {&#xA;        &#xA;        private void Go(object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;&#x9;&#x9;&#x9;IReducer&lt;IString, IInteger, IString, IInteger,br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier> reducer = ((IReducer&lt;IString, IInteger, IString, IInteger,br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier>)(this.Services.getPort(&quot;reducer&quot;)));&#xA;&#x9;&#x9;&#x9;Thread go_reducer = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_reducer.Start(reducer);&#xA;&#x9;&#x9;&#x9;ISplitterReduceCollector&lt;IInteger, IString, IString, IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;IInteger>> splitter = ((ISplitterReduceCollector&lt;IInteger, IString, IString, IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;IInteger>>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;&#x9;&#x9;&#x9;Thread go_splitter = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerReduceFeeder&lt;IString, IInteger> shuffler = ((IShufflerReduceFeeder&lt;IString, IInteger>)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;&#x9;&#x9;&#x9;Thread go_shuffler = new Thread (new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_reducer.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_3Impl.cs" srcType="user" uri="mapreduce.impl.SystemImpl/bin/1.0.0.0/IPeer_3Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="10" y="10">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="intermediate_pairs_global">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="reducer"/>
      </port>
      <port name="output_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="reducer"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_reduce" sRef="reducer"/>
      </port>
      <port name="task_binding_split_next">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_next" sRef="splitter"/>
      </port>
      <port name="output_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="splitter"/>
      </port>
      <port name="intermediate_pairs_global">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="shuffler"/>
      </port>
      <port name="task_binding_shuffle">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle" sRef="shuffler"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IRootImpl" nArgs="0">
      <slice isRef="application">
        <originRef cRef="application" iRef="IApplication"/>
        <visualDescription h="30" w="35" x="10" y="10"/>
      </slice>
      <slice isRef="workflow">
        <originRef cRef="workflow" iRef="IWorkflow"/>
        <visualDescription h="30" w="35" x="10" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using System.Threading;&#xA;using mapreduce.Application;&#xA;using mapreduce.Workflow;&#xA;using mapreduce.System;&#xA;using System;&#xA;&#xA;&#xA;namespace mapreduce.impl.SystemImpl {&#xA;    &#xA;    &#xA;&#x9;public class IRootImpl : br.ufc.pargo.hpe.kinds.Application, IRoot {&#xA;        &#xA;        private void Go(object o) &#xA;&#x9;&#x9;{&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;ROOT 1&quot;);&#xA;&#xA;            IApplication application = ((IApplication)(this.Services.getPort(&quot;application&quot;)));&#xA;&#x9;&#x9;&#x9;IWorkflow workflow = ((IWorkflow)(this.Services.getPort(&quot;workflow&quot;)));&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;ROOT 2&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;Thread go_application = new Thread(new ParameterizedThreadStart(this.Go));&#xA;&#x9;&#x9;&#x9;Thread go_workflow = new Thread(new ParameterizedThreadStart(this.Go));&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;ROOT 3&quot;);&#xA;&#xA;            go_application.Start(application);        &#xA;            go_workflow.Start(workflow);&#xA;            &#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;ROOT 4&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;go_application.Join();&#xA;            go_workflow.Join(); &#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;ROOT 5&quot;);&#xA;        }&#xA;    }&#xA;}&#xA;" name="IRootImpl.cs" srcType="user" uri="mapreduce.impl.SystemImpl/bin/1.0.0.0/IRootImpl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="53" y="142">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="task_binding_split_next">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_next" sRef="workflow"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="workflow"/>
      </port>
      <port name="task_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_map" sRef="workflow"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_reduce" sRef="workflow"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="workflow"/>
      </port>
      <port name="task_binding_shuffle">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle" sRef="workflow"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IPeer_0Impl" multiple="false" private="false" replica="0" uRef="peer_0" visibleInterface="true">
      <super cRef="base" uRef="peer_0"/>
      <visualDescription h="90" w="130" x="10" y="10"/>
    </unit>
    <unit facet="0" iRef="IPeer_1Impl" multiple="false" private="false" replica="0" uRef="peer_1" visibleInterface="true">
      <super cRef="base" uRef="peer_1"/>
      <visualDescription h="90" w="130" x="10" y="10"/>
    </unit>
    <unit facet="0" iRef="IPeer_2Impl" multiple="false" private="false" replica="0" uRef="peer_2" visibleInterface="true">
      <super cRef="base" uRef="peer_2"/>
      <visualDescription h="90" w="130" x="10" y="10"/>
    </unit>
    <unit facet="0" iRef="IPeer_3Impl" multiple="false" private="false" replica="0" uRef="peer_3" visibleInterface="true">
      <super cRef="base" uRef="peer_3"/>
      <visualDescription h="90" w="130" x="10" y="10"/>
    </unit>
    <unit facet="0" iRef="IRootImpl" multiple="false" private="false" replica="0" uRef="root" visibleInterface="true">
      <super cRef="base" uRef="root"/>
      <visualDescription h="90" w="130" x="10" y="10"/>
    </unit>
  </componentInfo>
</component:component>