<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000d1c574a8356e833e5894a7f19a8c75dbffa62785362dcfb94bb4dcef2dd5fe0fd2e8d400a0b5be06ddacc0295731ec2d2191202fe0a6d60ed88410aa2b8a80a78da1438264647f33aa91612c863a454ef25272a27a4f3489341671517c03f94d651988132bea353162842ed389ab254b44eb99a5d1ad699c7583c1de0ead1cc6" isAbstract="true" kind="Data" name="DataContainer" packagePath="br.ufc.mdcc.hpcshelf.gust.graph.container">
    <baseType>
      <extensionType>
        <extends>true</extends>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000139714d4151e1b412a9c70c46c1ca45b56878fcc36ce587ad9c3b8db2ec286ca277572c35129d78e10800fb12f98f0399c023ec6da5371a5d23b00b1237acc595cdf417e4e7b37153d4eb505a95586d3353e3c4cbea8d5f85c99550c786009f7b808620ab5e704240f8d8013230b1b9a742bceeb45e40340eb07b66465d299a2" localRef="base" location="br.ufc.mdcc.common.Data/Data.hpe" name="Data" package="br.ufc.mdcc.common" version="1.0.0.0">
        <visualDescription h="60" w="100" x="329" y="435">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <parameter componentRef="vertex" formFieldId="vertex_type" order="0" variance="contravariant" varName="V"/>
    <parameter componentRef="edgeFactory" formFieldId="edge_type" order="1" variance="contravariant" varName="E"/>
    <innerComponent localRef="vertex" location="br.ufc.mdcc.hpcshelf.gust.graph.Vertex/Vertex.hpe" multiple="false" name="Vertex" package="br.ufc.mdcc.hpcshelf.gust.graph" parameter_id="vertex_type" exposed="true">
      <visualDescription h="60" w="142" x="156" y="387">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="edgeFactory" location="br.ufc.mdcc.hpcshelf.gust.graph.Edge/Edge.hpe" multiple="false" name="Edge" package="br.ufc.mdcc.hpcshelf.gust.graph" parameter_id="edge_type" exposed="true">
      <visualDescription h="60" w="161" x="438" y="375">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="vertex_type" varName="V"/>
      <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <interface iRef="IDataContainer" nArgs="2">
      <slice isRef="edgeFactory">
        <originRef cRef="edgeFactory" iRef="IEdge"/>
        <visualDescription h="10" w="10" x="62" y="21"/>
      </slice>
      <slice isRef="vertex">
        <originRef cRef="vertex" iRef="IVertex"/>
        <visualDescription h="10" w="10" x="7" y="26"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* AUTOMATICALLY GENERATE CODE */&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Edge;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;using br.ufc.mdcc.common.Data;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer&#xA;{&#xA;&#x9;public interface BaseIDataContainer&lt;V, E> : BaseIData, IDataStructureKind &#xA;&#x9;&#x9;where V:IVertex&#xA;&#x9;&#x9;where E:IEdge&lt;V>&#xA;&#x9;{&#xA;&#x9;&#x9;E EdgeFactory {get;}&#xA;&#x9;&#x9;V Vertex {get;}&#xA;&#x9;}&#xA;}" name="BaseIDataContainer.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/BaseIDataContainer.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/BaseIData.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Edge;&#xA;using br.ufc.mdcc.common.Data;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer &#xA;{&#xA;&#x9;public interface IDataContainer&lt;V, E> : BaseIDataContainer&lt;V, E>, IData &#xA;&#x9;    where V:IVertex &#xA;&#x9;    where E:IEdge&lt;V> &#xA;&#x9;{&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;public interface IDataContainerInstance&lt;V, E> : IDataInstance, ICloneable &#xA;&#x9;&#x9;where V:IVertex &#xA;&#x9;&#x9;where E:IEdge&lt;V> {&#xA;&#x9;&#x9;int PartitionID { get; set; }&#xA;&#x9;&#x9;bool AllowingMultipleEdges { get; set;}&#xA;&#x9;&#x9;bool AllowingLoops { get; set;}&#xA;&#x9;&#x9;void newDataSet (int size);&#xA;&#x9;}&#xA;&#x9;public class EdgeContainer&lt;T>: IEdgeContainer&lt;T> { &#xA;&#x9;&#x9;public ICollection&lt;T> _outgoing;&#xA;&#x9;&#x9;public ICollection&lt;T> outgoing{&#xA;&#x9;&#x9;&#x9;get{ &#xA;&#x9;&#x9;&#x9;&#x9;return _outgoing;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;set{ _outgoing = (ICollection&lt;T>)value;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;public ICollection&lt;T> _incoming;&#xA;&#x9;&#x9;public ICollection&lt;T> incoming{&#xA;&#x9;&#x9;&#x9;get{ &#xA;&#x9;&#x9;&#x9;&#x9;return _incoming;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;set{ _incoming = (ICollection&lt;T>)value;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;public interface IEdgeContainer&lt;T> { &#xA;&#x9;&#x9;ICollection&lt;T> incoming { get; set; } &#xA;&#x9;&#x9;ICollection&lt;T> outgoing { get; set; } &#xA;&#x9;}&#xA;}" name="IDataContainer.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/IDataContainer.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/BaseIDataContainer.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="216" x="229" y="235">
        <color b="52" g="226" r="138"/>
      </visualDescription>
      <port name="edgeFactory">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="edgeFactory" sRef="edgeFactory"/>
      </port>
      <port name="vertex">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="vertex" sRef="vertex"/>
      </port>
      <parameter iname="IEdge" order="1" parid="edge_type" uname="data" varid="E"/>
      <parameter iname="IVertex" order="0" parid="vertex_type" uname="data" varid="V"/>
    </interface>
    <unit facet="0" iRef="IDataContainer" multiple="false" private="false" replica="0" uRef="data" visibleInterface="true">
      <super cRef="base" uRef="data"/>
      <slices cRef="edgeFactory" inner_replica="0" slice_replica="0" uRef="data" sliceName="edgeFactory" transitive="false">
        <visualDescription h="10" w="10" x="62" y="21"/>
      </slices>
      <slices cRef="vertex" inner_replica="0" slice_replica="0" uRef="data" sliceName="vertex" transitive="false">
        <visualDescription h="10" w="10" x="7" y="26"/>
      </slices>
      <visualDescription h="40" w="80" x="299" y="314"/>
    </unit>
  </componentInfo>
</component:component>