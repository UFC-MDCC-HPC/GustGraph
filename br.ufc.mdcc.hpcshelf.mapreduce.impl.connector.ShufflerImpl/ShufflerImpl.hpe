<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a34b601ed37631048a4e4f802504857d1be8f1adcb14915dc23acdcd432e7fca2a0ce9205be0b47959e0407f738eeb0e4c0e5b948f2b0a195eaea47d9bf609c52dab5015e13b91459fb98438466d23f4be22acd3108c316f25f5b558ca517b9a5f808b7a8d09b595f897015625c7f8fa084e0f7670cbf012a8a3a8387546c9b3" isAbstract="false" kind="Synchronizer" name="ShufflerImpl" packagePath="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007d4900344900bee415a5c2d578f3d0c04ab3ed1027955a24d179a38af36f84c3fb81fbc4a1db69f0fc56f9a6f50952df7a9f1a51205597afa46a4250c284544375971498c184e67623776790b9ac655d32b73e29bee37534c448030ec10b9bf44fd6a936f3905afd8500333e84f223a109b46be1e749ec052ce9ea2dca321aaf" localRef="base" location="br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler/Shuffler.hpe" name="Shuffler" package="br.ufc.mdcc.hpcshelf.mapreduce.connector" version="1.0.0.0">
        <visualDescription h="59" w="140" x="205" y="384">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="intermediate_value_type" varName="TValue"/>
        <parameter formFieldId="partition_function" varName="PF"/>
        <parameter formFieldId="intermediate_key_type" varName="TKey"/>
        <port index_replica="0" localRef="collect_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/EnvironmentBindingBaseDirect.hpe" multiple="false" name="EnvironmentBindingBaseDirect" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="100" x="61" y="403">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###1143378680"/>
          <parameter formFieldId="server_port_type" varName="X###1081801404"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="1" parallel="false" uRef="client_server">
            <visualDescription h="20" w="20" x="45" y="6"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="feed_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/EnvironmentBindingBaseDirect.hpe" multiple="false" name="EnvironmentBindingBaseDirect" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="100" x="517" y="411">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###1239641526"/>
          <parameter formFieldId="server_port_type" varName="X###1916267935"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client_server">
            <visualDescription h="20" w="20" x="41" y="14"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_shuffle_perform" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="83" w="228" x="369" y="436">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###902929486"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="1" parallel="true" slice_replica="0" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="12" y="34"/>
          </unitBounds>
          <unitBounds facet="0" facet_instance="1" facet_instance_enclosing="0" parallel="true" slice_replica="1" unit_replica="1" uRef="peer">
            <visualDescription h="20" w="20" x="181" y="36"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_shuffle_read_chunk" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="70" w="303" x="70" y="475">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1416421500"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="1" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="135" y="6"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_shuffle_chunk_ready" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="71" w="298" x="671" y="424">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###939923505"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="131" y="7"/>
          </unitBounds>
        </port>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="feeder">
          <visualDescription h="20" w="20" x="88" y="3"/>
        </unitBounds>
        <unitBounds facet="1" facet_instance="0" facet_instance_enclosing="1" parallel="true" uRef="collector">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="pf" location="br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/PartitionFunction.hpe" multiple="false" name="PartitionFunction" package="br.ufc.mdcc.hpcshelf.mapreduce.custom" exposed="false">
      <visualDescription h="60" w="100" x="469" y="620">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="input_key" varName="TKey"/>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="partition_function">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omk" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
      <visualDescription h="60" w="100" x="41" y="455">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="544" y="338">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="maintainer_map" location="br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost/ComputeHost.hpe" multiple="false" name="ComputeHost" package="br.ufc.mdcc.hpcshelf.platform.maintainer" exposed="false">
      <visualDescription h="60" w="100" x="79" y="79">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="compute_host">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="maintainer_reduce" location="br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost/ComputeHost.hpe" multiple="false" name="ComputeHost" package="br.ufc.mdcc.hpcshelf.platform.maintainer" exposed="false">
      <visualDescription h="60" w="100" x="74" y="73">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="compute_host">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="omk" direct="true" varName="TKey"/>
    <supplyParameter cRef="omv" direct="true" varName="TValue"/>
    <supplyParameter cRef="pf" direct="true" varName="PF"/>
    <supplyParameter cRef="maintainer_map" direct="true" varName="M1"/>
    <supplyParameter cRef="maintainer_reduce" direct="true" varName="M0"/>
    <interface iRef="IShufflerFeederImpl" nArgs="2">
      <slice isRef="feed_pairs">
        <originRef cRef="feed_pairs" iRef="IBindingDirect"/>
        <visualDescription h="10" w="10" x="85" y="28"/>
      </slice>
      <slice isRef="task_binding_shuffle_perform">
        <originRef cRef="task_binding_shuffle_perform" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="0" y="20"/>
      </slice>
      <slice isRef="task_binding_shuffle_chunk_ready">
        <originRef cRef="task_binding_shuffle_chunk_ready" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="112" y="19"/>
      </slice>
      <slice isRef="shuffler_channel">
        <originRef cRef="shuffler_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="5" y="8"/>
      </slice>
      <slice isRef="output">
        <originRef cRef="output" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="26" y="18"/>
      </slice>
      <slice isRef="value_factory">
        <originRef cRef="value_factory" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="11" y="24"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvancePerform;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvanceChunkReady;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl &#xA;{&#xA;&#x9;public abstract class BaseIShufflerFeederImpl&lt;TKey, TValue>: Synchronizer, BaseIShufflerFeeder&lt;TKey, TValue>&#xA;&#x9;&#x9;where TKey:IData&#xA;&#x9;&#x9;where TValue:IData&#x9;&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_FEED = 0;&#xA;&#x9;&#x9;static protected int FACET_COLLECT = 1;&#xA;&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvancePerform> task_binding_shuffle_perform = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvancePerform> Task_binding_shuffle_perform&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_shuffle_perform == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_shuffle_perform = (ITaskPort&lt;ITaskPortTypeAdvancePerform>) Services.getPort(&quot;task_binding_shuffle_perform&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_shuffle_perform;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvanceChunkReady> task_binding_shuffle_chunk_ready = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvanceChunkReady> Task_binding_shuffle_chunk_ready&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_shuffle_chunk_ready == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_shuffle_chunk_ready = (ITaskPort&lt;ITaskPortTypeAdvanceChunkReady>) Services.getPort(&quot;task_binding_shuffle_chunk_ready&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_shuffle_chunk_ready;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;&#x9;private IServerBase&lt;IPortTypeIterator> feed_pairs = null;&#xA;&#xA;&#x9;&#x9;public IServerBase&lt;IPortTypeIterator> Feed_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.feed_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.feed_pairs = (IServerBase&lt;IPortTypeIterator>) Services.getPort(&quot;feed_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.feed_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel shuffler_channel = null;&#xA;&#xA;&#x9;&#x9;public IChannel Shuffler_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.shuffler_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.shuffler_channel = (IChannel) Services.getPort(&quot;shuffler_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.shuffler_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;TKey,IIterator&lt;TValue>>> output = null;&#xA;&#x9;&#x9;protected IIterator&lt;IKVPair&lt;TKey,IIterator&lt;TValue>>> Output {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output = (IIterator&lt;IKVPair&lt;TKey,IIterator&lt;TValue>>>)Services.getPort(&quot;output&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;TValue> value_factory = null;&#xA;&#x9;&#x9;protected IIterator&lt;TValue> Value_factory {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.value_factory == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.value_factory = (IIterator&lt;TValue>)Services.getPort(&quot;value_factory&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.value_factory;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIShufflerFeederImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/BaseIShufflerFeederImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IServerBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler/bin/1.0.0.0/BaseIShufflerFeeder.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using System.Diagnostics;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.PerformActionType;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.ChunkReadyActionType;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl&#xA;{&#xA;&#x9;public class IShufflerFeederImpl&lt;TKey, TValue> : BaseIShufflerFeederImpl&lt;TKey, TValue>, IShufflerFeeder&lt;TKey, TValue>&#xA;&#x9;&#x9;where TKey:IData&#xA;&#x9;&#x9;where TValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SHUFFLE_NEW_CHUNK = 345;&#xA;&#x9;&#x9;static private int TAG_SHUFFLE_END_CHUNK = 347;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// Feed_pairs.TraceFlag = true; Shuffler_channel.TraceFlag = true;&#x9;Task_binding_shuffle_perform.TraceFlag = true;&#x9;Task_binding_shuffle_chunk_ready.TraceFlag = true;&#xA;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;TKey,IIterator&lt;TValue>>> output_instance = (IIteratorInstance&lt;IKVPair&lt;TKey,IIterator&lt;TValue>>>) Output.Instance;&#xA;&#x9;&#x9;&#x9;Feed_pairs.Server = output_instance;&#xA;&#xA;&#x9;&#x9;&#x9;// DETERMINE COMMUNICATION SOURCEs&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int>> ();&#xA;&#x9;&#x9;&#x9;int nf = this.FacetMultiplicity [FACET_COLLECT];&#xA;&#x9;&#x9;&#x9;int senders_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_COLLECT]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = senders_size;&#xA;&#x9;&#x9;&#x9;&#x9;senders_size += this.UnitSizeInFacet [i] [&quot;collector&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k = 0, j = nr0; j &lt; senders_size; k++, j++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int> (i, k);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;bool end_computation = false;&#xA;&#x9;&#x9;&#x9;while (!end_computation)   // next iteration&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - ENTER ITERATION&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IList&lt;int> inactive_senders = new List&lt;int>();&#xA;&#x9;&#x9;&#x9;&#x9;IList&lt;int> active_senders = new List&lt;int>();&#xA;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; senders_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;active_senders.Add (i);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end_computation = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;bool has_chunk = false;&#xA;&#x9;&#x9;&#x9;&#x9;while (active_senders.Count > 0)     // take next chunk ... &#xA;&#x9;&#x9;&#x9;&#x9;{  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - ENTER READ CHUNK&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_shuffle_perform.invoke (PERFORM.name, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;object,IIteratorInstance&lt;TValue>> kv_cache = new Dictionary&lt;object,IIteratorInstance&lt;TValue>> ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// PERFORM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (int i in active_senders) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - RECEIVE CHUNK FROM {1}&quot;, this.Rank, i);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;TKey,TValue>> buffer;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CompletedStatus status;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Shuffler_channel.Receive (unit_ref[i], MPI.Communicator.anyTag, out buffer, out status);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// In practice, it is expected that all senders send TAG_SPLIT_END_CHUNK in the same (last) iteration.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (status.Tag == TAG_SHUFFLE_END_CHUNK) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;inactive_senders.Add(i);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;has_chunk = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (IKVPairInstance&lt;TKey,TValue> kv in buffer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IIteratorInstance&lt;TValue> iterator = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!kv_cache.ContainsKey (kv.Key)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iterator = Value_factory.newIteratorInstance ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.Add (kv.Key, iterator);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;TKey,IIterator&lt;TValue>> item = (IKVPairInstance&lt;TKey,IIterator&lt;TValue>>)Output.createItem ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;item.Key = kv.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;item.Value = iterator;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.put (item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.TryGetValue (kv.Key, out iterator);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iterator.put (kv.Value);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (has_chunk)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_computation = false;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (int i in inactive_senders)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;active_senders.Remove (i);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - BEFORE FINISH CHUNK&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!end_computation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (IIteratorInstance&lt;TValue> iterator in kv_cache.Values) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iterator.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - AFTER PERFORM WAIT&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// CHUNK_READY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_shuffle_chunk_ready.invoke (CHUNK_READY.name);   //****&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerFeeder - AFTER CHUNK READY&quot;, this.Rank);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="IShufflerFeederImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/IShufflerFeederImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/BaseIShufflerFeederImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler/bin/1.0.0.0/IShufflerFeeder.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="135" x="278" y="215">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="feed_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="feed_pairs"/>
      </port>
      <port name="task_binding_shuffle_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_perform" sRef="task_binding_shuffle_perform"/>
      </port>
      <port name="task_binding_shuffle_chunk_ready">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_chunk_ready" sRef="task_binding_shuffle_chunk_ready"/>
      </port>
      <parameter iname="IData" order="0" parid="intermediate_key_type" uname="data" varid="TKey"/>
      <parameter iname="IData" order="1" parid="intermediate_value_type" uname="data" varid="TValue"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IShufflerCollectorImpl" nArgs="3">
      <slice isRef="task_binding_shuffle_perform">
        <originRef cRef="task_binding_shuffle_perform" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="0" y="31"/>
      </slice>
      <slice isRef="collect_pairs">
        <originRef cRef="collect_pairs" iRef="IBindingDirect"/>
        <visualDescription h="10" w="10" x="1" y="28"/>
      </slice>
      <slice isRef="task_binding_shuffle_read_chunk">
        <originRef cRef="task_binding_shuffle_read_chunk" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="102" y="28"/>
      </slice>
      <slice isRef="shuffler_channel">
        <originRef cRef="shuffler_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="79" y="8"/>
      </slice>
      <slice isRef="partition_function">
        <originRef cRef="partition_function" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="10" x="60" y="7"/>
      </slice>
      <slice isRef="input_map_collector">
        <originRef cRef="input_map_collector" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="28" y="30"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvancePerform;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvanceReadChunk;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl &#xA;{&#xA;&#x9;public abstract class BaseIShufflerCollectorImpl&lt;TKey,TValue,PF>: Synchronizer, BaseIShufflerCollector&lt;TKey,TValue,PF>&#xA;&#x9;&#x9;where PF:IPartitionFunction&lt;TKey>&#xA;&#x9;&#x9;where TKey:IData&#xA;&#x9;&#x9;where TValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_FEED = 0;&#xA;&#x9;&#x9;static protected int FACET_COLLECT = 1;&#xA;&#xA;&#x9;&#x9;private IClientBase&lt;IPortTypeIterator> collect_pairs = null;&#xA;&#xA;&#x9;&#x9;public IClientBase&lt;IPortTypeIterator> Collect_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.collect_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.collect_pairs = (IClientBase&lt;IPortTypeIterator>) Services.getPort(&quot;collect_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.collect_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvancePerform> task_binding_shuffle_perform = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvancePerform> Task_binding_shuffle_perform&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_shuffle_perform == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_shuffle_perform = (ITaskPort&lt;ITaskPortTypeAdvancePerform>) Services.getPort(&quot;task_binding_shuffle_perform&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_shuffle_perform;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvanceReadChunk> task_binding_shuffle_read_chunk = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvanceReadChunk> Task_binding_shuffle_read_chunk&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_shuffle_read_chunk == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_shuffle_read_chunk = (ITaskPort&lt;ITaskPortTypeAdvanceReadChunk>) Services.getPort(&quot;task_binding_shuffle_read_chunk&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_shuffle_read_chunk;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private TKey input_key = default(TKey);&#xA;&#x9;&#x9;protected TKey Input_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_key = (TKey) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IInteger output_key = null;&#xA;&#x9;&#x9;protected IInteger Output_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_key = (IInteger) Services.getPort(&quot;output_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel shuffler_channel = null;&#xA;&#xA;&#x9;&#x9;public IChannel Shuffler_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.shuffler_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.shuffler_channel = (IChannel) Services.getPort(&quot;shuffler_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.shuffler_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private PF partition_function = default(PF);&#xA;&#xA;&#x9;&#x9;protected PF Partition_function&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.partition_function == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.partition_function = (PF) Services.getPort(&quot;partition_function&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.partition_function;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIShufflerCollectorImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/BaseIShufflerCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IClientBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.Integer/bin/1.0.0.0/IInteger.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/bin/1.0.0.0/IPartitionFunction.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler/bin/1.0.0.0/BaseIShufflerCollector.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using System.Diagnostics;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.ReadChunkActionType;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.PerformActionType;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl&#x9;&#xA;{&#xA;&#x9;public class IShufflerCollectorImpl&lt;TKey,TValue,PF> : BaseIShufflerCollectorImpl&lt;TKey,TValue,PF>, IShufflerCollector&lt;TKey,TValue,PF>&#xA;&#x9;&#x9;where PF:IPartitionFunction&lt;TKey>&#xA;&#x9;&#x9;where TKey:IData&#xA;&#x9;&#x9;where TValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SHUFFLE_NEW_CHUNK = 345;&#xA;&#x9;&#x9;static private int TAG_SHUFFLE_EOS_CHUNK = 347;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;//Collect_pairs.TraceFlag = true;&#x9;Shuffler_channel.TraceFlag = true;&#x9;Task_binding_shuffle_perform.TraceFlag = true; Task_binding_shuffle_read_chunk.TraceFlag = true;&#xA;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;TKey,TValue>> input_instance = (IIteratorInstance&lt;IKVPair&lt;TKey,TValue>>) Collect_pairs.Client;&#xA;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;// DETERMINE COMMMUNICATION TARGETs&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int>> ();&#xA;&#x9;&#x9;&#x9;int nf = this.FacetMultiplicity [FACET_FEED];&#xA;&#x9;&#x9;&#x9;int reduce_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_FEED]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = reduce_size;&#xA;&#x9;&#x9;&#x9;&#x9;reduce_size += this.UnitSizeInFacet [i] [&quot;feeder&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k=0, j=nr0; j &lt; reduce_size; k++, j++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int> (i,k);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;Partition_function.NumberOfPartitions = reduce_size;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;bool end_computation = false;&#xA;&#x9;&#x9;&#x9;while (!end_computation) // next iteration&#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;end_computation = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - ENTER ITERATION&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;&#x9;while (!end_iteration) // take next chunk ...&#xA;&#x9;&#x9;&#x9;&#x9;{  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - BEFORE READ CHUNK&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_shuffle_read_chunk.invoke (READ_CHUNK.name);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_shuffle_perform.invoke (PERFORM.name, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - AFTER PERFORM&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;TKey,TValue>>[] buffer = new IList&lt;IKVPairInstance&lt;TKey,TValue>>[reduce_size];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; reduce_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [i] = new List&lt;IKVPairInstance&lt;TKey,TValue>> ();&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!input_instance.has_next ())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_computation = false;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (input_instance.fetch_next (out bin_object)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//Console.WriteLine (&quot;{0}: IShufflerCollector - CHUNK ITEM {1}&quot;, this.Rank, count);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;TKey,TValue> item = (IKVPairInstance&lt;TKey,TValue>)bin_object;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this.Input_key.Instance = item.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Partition_function.go ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int index = ((IIntegerInstance)this.Output_key.Instance).Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [index].Add (item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - END CHUNK&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// PERFORM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; reduce_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Shuffler_channel.Send (buffer [i], unit_ref [i], end_iteration ? TAG_SHUFFLE_EOS_CHUNK : TAG_SHUFFLE_NEW_CHUNK);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - AFTER SEND CHUNK&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: IShufflerCollector - AFTER PERFORM WAIT&quot;, this.Rank);&#xA;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="IShufflerCollectorImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/IShufflerCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/bin/1.0.0.0/IPartitionFunction.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.ShufflerImpl/bin/1.0.0.0/BaseIShufflerCollectorImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler/bin/1.0.0.0/IShufflerCollector.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="133" x="75" y="133">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="task_binding_shuffle_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_perform" sRef="task_binding_shuffle_perform"/>
      </port>
      <port name="collect_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="collect_pairs"/>
      </port>
      <port name="task_binding_shuffle_read_chunk">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_read_chunk" sRef="task_binding_shuffle_read_chunk"/>
      </port>
      <parameter iname="IPartitionFunction" order="2" parid="partition_function" uname="partition_function" varid="PF"/>
      <parameter iname="IData" order="0" parid="intermediate_key_type" uname="data" varid="TKey"/>
      <parameter iname="IData" order="1" parid="intermediate_value_type" uname="data" varid="TValue"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IShufflerFeederImpl" multiple="true" private="false" replica="0" uRef="feeder" visibleInterface="true">
      <super cRef="base" uRef="feeder"/>
      <visualDescription h="40" w="106" x="264" y="309"/>
    </unit>
    <unit facet="1" iRef="IShufflerCollectorImpl" multiple="true" private="false" replica="0" uRef="collector" visibleInterface="true">
      <super cRef="base" uRef="collector"/>
      <visualDescription h="40" w="95" x="109" y="298"/>
    </unit>
  </componentInfo>
</component:component>