<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000568e46577ade31e4a9fb6640e0e26c5bae269bb63c8358cd6824a44e0e9216147d192f0371b52820b327ab483b0f53f0fbcca1b59941be439947b84a6e035d6e69be0c74db38b3bbcb4cbb7ccf8eb413edee4c522dbd098eded4a86aed8b9760cff33cac849446d1d78386d775a9961615fd9d7712d904004236436e4a3eb8a" isAbstract="false" kind="Synchronizer" name="EnvironmentBindingWriteDataGraphImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f91c76daea79c7c65c0ce178fc113241153763258f748a5a7a489c0e38f8610295de1d6380a31f8b8d324a30fd1a38d80c3b0f4b047249c199209cdec8e1389b5b08bae1864b8dbd424c7c3d35cb70877315fc8bfa6e1915f43ddae93c5b0efeea57fd84bc0608737b4fe733bec792bd0fd8d07cef8dc4a434e3225bf7d03e98" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingWriteDataGraph/EnvironmentBindingWriteDataGraph.hpe" name="EnvironmentBindingWriteDataGraph" package="br.ufc.mdcc.hpcshelf.gust.binding.environment" version="1.0.0.0">
        <visualDescription h="60" w="100" x="277" y="470">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="server_port_type" varName="S"/>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client_server">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="499" y="394">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="c" location="br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSinkGraphInterface/PortTypeDataSinkGraphInterface.hpe" multiple="false" name="PortTypeDataSinkGraphInterface" package="br.ufc.mdcc.hpcshelf.gust.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="501" y="264">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <supplyParameter cRef="c" direct="true" varName="C"/>
    <interface iRef="IWriteDataGraphImpl" nArgs="1">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingWriteDataGraph;//&#xA;using br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSinkGraphInterface;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingWriteDataGraphImpl&#xA;{&#xA;    public abstract class BaseIWriteDataGraphImpl&lt;S>: Synchronizer, BaseIWriteDataGraph&lt;S>&#xA;&#x9;&#x9;//where C:IPortTypeIterator&#xA;&#x9;&#x9;where S:IPortTypeIterator&#xA;&#x9;{&#xA;&#x9;&#x9;private IPortTypeDataSinkGraphInterface client_port_type = default(IPortTypeDataSinkGraphInterface);&#xA;&#x9;&#x9;protected IPortTypeDataSinkGraphInterface Client_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.client_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.client_port_type = (IPortTypeDataSinkGraphInterface) Services.getPort(&quot;client_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.client_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private S server_port_type = default(S);&#xA;&#x9;&#x9;protected S Server_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.server_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.server_port_type = (S) Services.getPort(&quot;server_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.server_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIWriteDataGraphImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingWriteDataGraphImpl/bin/1.0.0.0/BaseIWriteDataGraphImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentPortType/bin/1.0.0.0/IEnvironmentPortType.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingWriteDataGraph/bin/1.0.0.0/BaseIWriteDataGraph.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Concurrent;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingWriteDataGraph;//&#xA;using br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSinkGraphInterface;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingWriteDataGraphImpl&#xA;{&#xA;    public class IWriteDataGraphImpl&lt;S>: BaseIWriteDataGraphImpl&lt;S>, IWriteDataGraph&lt;S>&#xA;&#x9;&#x9;where S:IPortTypeIterator&#xA;&#x9;{&#xA;&#x9;&#x9;private ConcurrentQueue&lt;Tuple&lt;object,int>> lines = new ConcurrentQueue&lt;Tuple&lt;object,int>>();&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private Thread thread_file_writer = null;&#xA;&#xA;&#x9;&#x9;public override void after_initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;client = new IPortTypeDataSinkGraphInterfaceImpl (lines);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;internal class IPortTypeDataSinkGraphInterfaceImpl : IPortTypeDataSinkGraphInterface&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;private Semaphore not_empty = new Semaphore(0,int.MaxValue);&#xA;&#x9;&#x9;&#x9;private S server;&#xA;&#x9;&#x9;&#x9;private ConcurrentQueue&lt;Tuple&lt;object,int>> lines;&#xA;&#x9;&#x9;&#x9;AutoResetEvent e = new AutoResetEvent(false);&#xA;&#x9;&#x9;&#x9;private int index = 0;&#xA;&#xA;&#x9;&#x9;&#x9;public S Server { set {&#x9;server = value; e.Set (); } }&#xA;&#xA;&#x9;&#x9;&#x9;public IPortTypeDataSinkGraphInterfaceImpl(ConcurrentQueue&lt;Tuple&lt;object,int>> lines)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;this.e = e;&#xA;&#x9;&#x9;&#x9;&#x9;this.lines = lines;&#xA;&#x9;&#x9;&#x9;&#x9;this.server = server;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;public ConcurrentQueue&lt;Tuple&lt;object,int>> readPairs ()&#xA;&#x9;&#x9;&#x9;{&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Thread t = new Thread(new ThreadStart(() =>&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.WaitOne();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS START&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// SINGLE ITERATION (Count Words)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (!end_iteration)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    Console.WriteLine(&quot;READ COUNTS - ITERATION &quot; + (server==null));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!server.has_next ())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//IKVPairInstance&lt;IString,IInteger> bin;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;while (server.fetch_next (out bin_object))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - READ &quot; + count);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//bin = (IKVPairInstance&lt;IString,IInteger>)bin_object;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//string s = ((IStringInstance)bin.Key).Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//int c = (int) bin.Value;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple&lt;object,int> tt = new Tuple&lt;object,int> (bin_object, (++index));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;lines.Enqueue (tt);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count = not_empty.Release();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - END CHUNK &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - END ITERATION &quot;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;lines.Enqueue(new Tuple&lt;object,int>(null,0));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;not_empty.Release();&#xA;&#x9;&#x9;&#x9;&#x9;}));&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;t.Start();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;return lines;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;public Semaphore NotEmpty { get { return not_empty; } }&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;private IPortTypeDataSinkGraphInterface client = null;&#xA;&#x9;&#x9;public IPortTypeDataSinkGraphInterface Client { get {&#x9;return client; } }&#xA;&#xA;&#x9;&#x9;private S server = default(S);&#xA;&#x9;&#x9;public S Server { set {&#x9;server = value; ((IPortTypeDataSinkGraphInterfaceImpl)client).Server = server; } }&#xA;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" name="IWriteDataGraphImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingWriteDataGraphImpl/bin/1.0.0.0/IWriteDataGraphImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingWriteDataGraphImpl/bin/1.0.0.0/BaseIWriteDataGraphImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingWriteDataGraph/bin/1.0.0.0/IWriteDataGraph.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="296" x="153" y="296">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IWriteDataGraphImpl" multiple="false" private="false" replica="0" uRef="client_server" visibleInterface="true">
      <super cRef="base" uRef="client_server"/>
      <visualDescription h="40" w="201" x="189" y="391"/>
    </unit>
  </componentInfo>
</component:component>