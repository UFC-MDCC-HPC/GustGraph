<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007d3642b0e4714e1cb15b78b5d9edeec08208ce4230cba4aaa4dad06fee0d11a4515a269b0b9e4bb350f62d2b00d641254b04cbd0de4c7fb522ba56b463cc39815c6067b40c103b240e518989b3393960d70613959c515b31e72622f2b23a2bdcc751a18968da74376e8fa000994ad758e12ffb0c874ea9bf4523de5fc58c20a3" isAbstract="false" kind="Data" name="VertexImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.graph.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cf9e7d52a137ba6839b7a06eb28c21de8b6d3336bbab86d406286fafc20ed1d406d61b7e2eef7f3022a762428647a6ce62a2d35333633d892f02b9fc35e631a7e51f854141670f0368681a15001642bb0b476bb8ff34633383b21877f3d6879ce037affbff7581a5e8716249407a2e0765fcd387222bc07ddc439fc256fece92" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.graph.Vertex/Vertex.hpe" name="Vertex" package="br.ufc.mdcc.hpcshelf.gust.graph" version="1.0.0.0">
        <visualDescription h="60" w="100" x="197" y="587">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <interface iRef="IVertexImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.impl.VertexImpl &#xA;{&#xA;&#x9;public abstract class BaseIVertexImpl: DataStructure, BaseIVertex&#xA;&#x9;{&#xA;&#x9;}&#xA;}" name="BaseIVertexImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.graph.impl.VertexImpl/bin/1.0.0.0/BaseIVertexImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/BaseIVertex.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.impl.VertexImpl &#xA;{&#xA;&#x9;public class IVertexImpl : BaseIVertexImpl, IVertex &#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;public IVertexImpl () { }&#xA;&#xA;&#x9;&#x9;override public void after_initialize () {&#xA;&#x9;&#x9;&#x9;newInstance (); &#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public IVertexInstance newInstance (int i) {&#xA;&#x9;&#x9;&#x9;IVertexInstance instance = (IVertexInstance)newInstance ();&#xA;&#x9;&#x9;&#x9;instance.Id = i;&#xA;&#x9;&#x9;&#x9;return instance;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public object newInstance () {&#xA;&#x9;&#x9;&#x9;this.instance = new IVertexInstanceImpl ();&#xA;&#x9;&#x9;&#x9;return this.Instance;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IVertexInstance instance;&#xA;&#xA;&#x9;&#x9;public object Instance {&#xA;&#x9;&#x9;&#x9;get { return instance; }&#xA;&#x9;&#x9;&#x9;set { this.instance = (IVertexInstance)value; }&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;public IVertexInstance VInstance {&#xA;&#x9;&#x9;&#x9;get { return instance; }&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;[Serializable]&#xA;&#x9;public class IVertexInstanceImpl : IVertexInstance {&#xA;&#xA;&#x9;&#x9;#region IVertexInstance implementation&#xA;&#x9;&#x9;private int val;&#xA;&#xA;&#x9;&#x9;public int Id {&#xA;&#x9;&#x9;&#x9;get { return val; }&#xA;&#x9;&#x9;&#x9;set { this.val = value; }&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public object ObjValue {&#xA;&#x9;&#x9;&#x9;get { return val; }&#xA;&#x9;&#x9;&#x9;set { this.val = (int)value; }&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public override string ToString () {&#xA;&#x9;&#x9;&#x9;return Id.ToString ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public override int GetHashCode () {&#xA;&#x9;&#x9;&#x9;return this.Id;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;public override bool Equals (object obj) {&#xA;&#x9;&#x9;&#x9;if (typeof(IVertexInstance).IsAssignableFrom (obj.GetType ()))&#xA;&#x9;&#x9;&#x9;&#x9;return this.Id == ((IVertexInstance)obj).Id;&#xA;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;&#x9;#region ICloneable implementation&#xA;&#x9;&#x9;public object Clone () {&#xA;&#x9;&#x9;&#x9;IVertexInstance clone = new IVertexInstanceImpl ();&#xA;&#x9;&#x9;&#x9;clone.Id = this.Id;&#xA;&#x9;&#x9;&#x9;return clone;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#xA;&#x9;}&#xA;}&#xA;" name="IVertexImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.graph.impl.VertexImpl/bin/1.0.0.0/IVertexImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.graph.impl.VertexImpl/bin/1.0.0.0/BaseIVertexImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="208" x="96" y="424">
        <color b="207" g="159" r="114"/>
      </visualDescription>
    </interface>
    <unit facet="0" iRef="IVertexImpl" multiple="false" private="false" replica="0" uRef="data" visibleInterface="true">
      <super cRef="base" uRef="data"/>
      <visualDescription h="40" w="80" x="164" y="504"/>
    </unit>
  </componentInfo>
</component:component>