<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000001143bfc1102878951d219bb89ae0d8d6b4220c7f247b619f3856a3d5a2f87b04d19c804d28b52e8525555c6f12e939c2c9eb4a4299925a78fdf0d2e652a13605a4db07b7f44ebda986875d23de6feac858a28864e6b128388587981162d3129b6a2d12358c49602988816c77f4334b5c8a3e33f08052ce754ef1bda434067189" isAbstract="false" kind="Synchronizer" name="EnvironmentBindingReadDataGraphImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000003bdd3faf07c3fe65b568c93218e1cf193ffe78541f84bb827d4ebec3235a7c0600e7a475f870f2b9e929c119c4acb9f452ddc2d2f0909f9788e8d896ae60492d85bbb22dfc8b8c3f568df372a353815c0484aa86160178aaac79fd29750a35f92b010765d66a57b9709b254cbee8b931eccb7728e0bb99d6a04f9c4727fa7296" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingReadDataGraph/EnvironmentBindingReadDataGraph.hpe" name="EnvironmentBindingReadDataGraph" package="br.ufc.mdcc.hpcshelf.gust.binding.environment" version="1.0.0.0">
        <visualDescription h="60" w="132" x="289" y="458">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="server_port_type" varName="S"/>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client_server">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSourceGraphInterface/PortTypeDataSourceGraphInterface.hpe" multiple="false" name="PortTypeDataSourceGraphInterface" package="br.ufc.mdcc.hpcshelf.gust.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="512" y="453">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="c" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="484" y="290">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <supplyParameter cRef="c" direct="true" varName="C"/>
    <interface iRef="IReadDataGraphImpl" nArgs="1">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentPortType;&#xA;using br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingReadDataGraph;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect;&#xA;using br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSourceGraphInterface;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingReadDataGraphImpl&#xA;{&#xA;&#x9;public abstract class BaseIReadDataGraphImpl&lt;S>: Synchronizer, BaseIReadDataGraph&lt;S>&#xA;&#x9;&#x9;//where C:IPortTypeIterator&#xA;&#x9;&#x9;where S:IPortTypeDataSourceGraphInterface&#xA;&#x9;{&#xA;&#x9;&#x9;private IPortTypeIterator client_port_type = null;&#xA;&#x9;&#x9;protected IPortTypeIterator Client_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.client_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.client_port_type = (IPortTypeIterator) Services.getPort(&quot;client_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.client_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private S server_port_type = default(S);&#xA;&#x9;&#x9;protected S Server_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.server_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.server_port_type = (S) Services.getPort(&quot;server_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.server_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIReadDataGraphImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingReadDataGraphImpl/bin/1.0.0.0/BaseIReadDataGraphImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentPortType/bin/1.0.0.0/IEnvironmentPortType.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingReadDataGraph/bin/1.0.0.0/BaseIReadDataGraph.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingReadDataGraph;//&#xA;using br.ufc.mdcc.hpcshelf.gust.port.environment.PortTypeDataSourceGraphInterface;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingReadDataGraphImpl&#xA;{&#xA;    public class IReadDataGraphImpl&lt;S>: BaseIReadDataGraphImpl&lt;S>, IReadDataGraph&lt;S>&#xA;&#x9;&#x9;where S:IPortTypeDataSourceGraphInterface {&#xA;&#x9;&#x9;public override void main(){ }&#xA;&#xA;&#x9;&#x9;private Thread thread_file_reader = null;&#xA;&#xA;&#x9;&#x9;public override void after_initialize() &#xA;        {&#xA;            startReadSource ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void ask_for_next_item() {&#xA;&#x9;&#x9;&#x9;e.Set ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;AutoResetEvent e = new AutoResetEvent(false);&#xA;&#x9;&#x9;ManualResetEvent client_ok = new ManualResetEvent(false); &#xA;&#x9;&#x9;AutoResetEvent server_ok = new AutoResetEvent(false);&#xA;&#xA;&#x9;&#x9;public void startReadSource() {&#xA;&#x9;&#x9;&#x9;thread_file_reader = new Thread (file_reader);&#xA;&#x9;&#x9;&#x9;thread_file_reader.Start ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IPortTypeIterator client = null;&#xA;&#x9;&#x9;public IPortTypeIterator Client { &#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;client_ok.WaitOne ();&#xA;&#x9;&#x9;&#x9;&#x9;return client; &#xA;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private S server = default(S);&#xA;&#x9;&#x9;public S Server { &#xA;&#x9;&#x9;&#x9;set { &#xA;&#x9;&#x9;&#x9;&#x9;server = value; &#xA;                client = (IPortTypeIterator)(server.IteratorInstance);&#xA;&#x9;&#x9;&#x9;&#x9;client.IsEmptyAction = ask_for_next_item;&#xA;&#x9;&#x9;&#x9;&#x9;server_ok.Set ();&#xA;&#x9;&#x9;&#x9;&#x9;client_ok.Set ();&#xA;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private static int CHUNK_SIZE = 50;&#xA;&#xA;&#x9;&#x9;int counter_write_chunk = 0;&#xA;&#x9;&#x9;int counter_write_global = 0;&#xA;&#xA;&#x9;&#x9;private void file_reader() {&#xA;&#xA;            Console.WriteLine(&quot;STARTING FILE READER 1&quot;);&#xA;&#xA;            server_ok.WaitOne();&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;STARTING FILE READER 2&quot;);&#xA;&#xA;            IEnumerable&lt;object> enumerable_obj = server.fetchContentsKeyValue ();&#xA;&#x9;&#x9;&#x9;foreach (object item_kv in enumerable_obj) &#xA;            {&#xA;&#x9;&#x9;&#x9;&#x9;e.WaitOne (); &#xA;                Console.WriteLine(&quot;IReadGraphImpl - NEW ITEM &quot; + item_kv);&#xA;&#x9;&#x9;&#x9;&#x9;client.put(item_kv);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;counter_write_chunk++;&#xA;&#x9;&#x9;&#x9;&#x9;counter_write_global++;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;if (counter_write_chunk >= CHUNK_SIZE) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;NEW CHUNK size=&quot; + counter_write_chunk);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;counter_write_chunk = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;client.finish ();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;// CLOSE THE LAST CHUNK.&#xA;&#x9;&#x9;&#x9;if (counter_write_chunk > 0)&#xA;&#x9;&#x9;&#x9;&#x9;client.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;// SEND ITERATION TERMINATION CHUNK.&#xA;&#x9;&#x9;&#x9;client.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;// SEND COMPUTATION TERMINATION CHUNK.&#xA;&#x9;&#x9;&#x9;client.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;FINISHING READING DATA SOURCE&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="IReadDataGraphImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingReadDataGraphImpl/bin/1.0.0.0/IReadDataGraphImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.binding.impl.environment.EnvironmentBindingReadDataGraphImpl/bin/1.0.0.0/BaseIReadDataGraphImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.binding.environment.EnvironmentBindingReadDataGraph/bin/1.0.0.0/IReadDataGraph.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="257" x="106" y="288">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IReadDataGraphImpl" multiple="false" private="false" replica="0" uRef="client_server" visibleInterface="true">
      <super cRef="base" uRef="client_server"/>
      <visualDescription h="40" w="200" x="174" y="367"/>
    </unit>
  </componentInfo>
</component:component>