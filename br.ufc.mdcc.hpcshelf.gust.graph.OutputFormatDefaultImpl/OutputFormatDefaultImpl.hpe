<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000085cb1f07f988f47440d5aa3c94b1877e84deb3f70ee1e595438862be2ccedae195754630b309613e5b6b7c8ed08c290b7429add6443fd245a70ee4a10819c051156196599fa273887e7d834140321a7d61da6f302f239abf4d46cea5c331d5c4a16604c348fd149f9302b6556396b2c8b114851d7a91b9ac7f6659a6be943987" isAbstract="false" kind="Data" name="OutputFormatDefaultImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.graph">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cd86503896470409ff3daaad2864d0fc3e1eb122251d63a6520bb65f43ba2cda0fb42e4704ae650026359bd203dede890f90817fa0338e5e9905e340a2068cab6220a313a6d0070b1af47db681592c2b2adc571f9e0603f3bfe267c1cef07a0537531e1cb2f702ed3415d286e8ab5a915e800e72a72b82c191dee72501ccc18a" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.graph.OutputFormat/OutputFormat.hpe" name="OutputFormat" package="br.ufc.mdcc.hpcshelf.gust.graph" version="1.0.0.0">
        <visualDescription h="60" w="100" x="318" y="457">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="output_value_type" varName="IValue"/>
        <parameter formFieldId="output_key_type" varName="IKey"/>
        <port index_replica="0" localRef="output_format_pairs" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="250" x="469" y="427">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###475904750"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="ikey" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="498" y="335">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="ivalue" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="531" y="500">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="ikey" direct="true" varName="IKey"/>
    <supplyParameter cRef="ivalue" direct="true" varName="IValue"/>
    <interface iRef="IOutputFormatDefaultImpl" nArgs="2">
      <slice isRef="output_format_pairs">
        <originRef cRef="output_format_pairs" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="63" y="18"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.OutputFormat;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.OutputFormatDefaultImpl&#xA;{&#xA;&#x9;public abstract class BaseIOutputFormatDefaultImpl&lt;IKey, IValue>: DataStructure, BaseIOutputFormat&lt;IKey, IValue>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IKey, IValue>> output_format_pairs = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;IKey, IValue>> Output_format_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_format_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_format_pairs = (IIterator&lt;IKVPair&lt;IKey, IValue>>) Services.getPort(&quot;output_format_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_format_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIOutputFormatDefaultImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.graph.OutputFormatDefaultImpl/bin/1.0.0.0/BaseIOutputFormatDefaultImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.OutputFormat/bin/1.0.0.0/BaseIOutputFormat.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.OutputFormat;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.OutputFormatDefaultImpl&#xA;{&#xA;&#x9;public class IOutputFormatDefaultImpl&lt;IKey, IValue> : BaseIOutputFormatDefaultImpl&lt;IKey, IValue>, IOutputFormat&lt;IKey, IValue>&#xA;where IKey:IData&#xA;where IValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;override public void after_initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;newInstance();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;public object newInstance ()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IKey,IValue>> output_instance = (IIteratorInstance&lt;IKVPair&lt;IKey,IValue>>)this.Output_format_pairs.Instance;&#xA;&#x9;&#x9;&#x9;return this.Instance = new IOutputFormatInstanceImpl&lt;IKey,IValue> (output_instance);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IOutputFormatInstance&lt;IKey,IValue> instance;&#xA;&#xA;&#x9;&#x9;public object Instance {&#xA;&#x9;&#x9;&#x9;get { return instance;&#x9;}&#xA;&#x9;&#x9;&#x9;set { this.instance = (IOutputFormatInstance&lt;IKey,IValue>) value;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;[Serializable]&#xA;&#x9;public class IOutputFormatInstanceImpl&lt;IKey,IValue> : IOutputFormatInstance&lt;IKey,IValue>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;public IOutputFormatInstanceImpl(object _iterator)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.iterator = (IIteratorInstance&lt;IKVPair&lt;IKey,IValue>>) _iterator;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#region IOutputFormatInstance implementation&#xA;&#xA;&#x9;&#x9;private object iterator;&#xA;&#xA;&#x9;&#x9;public object Iterator {&#xA;&#x9;&#x9;&#x9;get { return this.iterator; }&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public object ObjValue {&#xA;&#x9;&#x9;&#x9;get { return new Tuple&lt;object>(this.iterator); }&#xA;&#x9;&#x9;&#x9;set&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;this.iterator = ((Tuple&lt;object,object>)value).Item1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public string formatRepresentation(object kv_pair){&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;IKey,IValue> kv = (IKVPairInstance&lt;IKey,IValue>)kv_pair;&#xA;&#x9;&#x9;&#x9;return kv.Key.ToString() + &quot;:&quot; + kv.Value.ToString();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;&#x9;#region ICloneable implementation&#xA;&#xA;&#x9;&#x9;public object Clone ()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IOutputFormatInstance&lt;IKey,IValue> clone = new IOutputFormatInstanceImpl&lt;IKey,IValue>(((ICloneable)this.iterator).Clone());&#xA;&#xA;&#x9;&#x9;&#x9;return clone;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" name="IOutputFormatDefaultImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.graph.OutputFormatDefaultImpl/bin/1.0.0.0/IOutputFormatDefaultImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.graph.OutputFormatDefaultImpl/bin/1.0.0.0/BaseIOutputFormatDefaultImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.OutputFormat/bin/1.0.0.0/IOutputFormat.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="238" x="190" y="290">
        <color b="2" g="89" r="143"/>
      </visualDescription>
      <port name="output_format_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_format_pairs" sRef="output_format_pairs"/>
      </port>
      <parameter iname="IData" order="0" parid="output_key_type" uname="data" varid="IKey"/>
      <parameter iname="IData" order="1" parid="output_value_type" uname="data" varid="IValue"/>
    </interface>
    <unit facet="0" iRef="IOutputFormatDefaultImpl" multiple="false" private="false" replica="0" uRef="data" visibleInterface="true">
      <super cRef="base" uRef="data"/>
      <visualDescription h="40" w="159" x="259" y="372"/>
    </unit>
  </componentInfo>
</component:component>