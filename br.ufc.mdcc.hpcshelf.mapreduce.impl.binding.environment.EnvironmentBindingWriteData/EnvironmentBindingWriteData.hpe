<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000fd07565df3efd238372303687767f85cbeb6187a432fd31800e9760524fb34c51573f9cc4b5072f9c72b49fc174be85d83c9226825cf16a7ed1267a67844776ebe079c72f71f9b64efa9237117f467b8791b717d7601c6e9ba62a8d19eb76aafd95fc6208f342f95553ddf623f5399ccdafbc940985b066e16e0a16faf21fb83" isAbstract="false" kind="Synchronizer" name="EnvironmentBindingWriteData" packagePath="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000005901f97c2468306dcf86613e7acc7f83ef5788ffcbca75974978d796d4d6b85583c8c62a22152313bdbda8855097dec82897d853132cf8c13283c1cb41e3fa69ed9b9bda3084980906dacd4c5149b0a5978b8576ae1b01ae15b1472d1cd6edc384c5915a7598c9dc067c45fe83028185ca41e8d3ec22184b50e58d9e4c3f2b81" localRef="base" location="br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingWriteData/EnvironmentBindingWriteData.hpe" name="EnvironmentBindingWriteData" package="br.ufc.mdcc.hpcshelf.mapreduce.binding.environment" version="1.0.0.0">
        <visualDescription h="60" w="100" x="255" y="348">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="server_port_type" varName="S"/>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client_server">
          <visualDescription h="20" w="20" x="24" y="14"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="100" y="580">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <interface iRef="IWriteDataImpl" nArgs="1">
      <slice isRef="output_pairs_iterator">
        <originRef cRef="output_pairs_iterator" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="40" y="24"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentPortType;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSinkInterface;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingWriteData;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingWriteData &#xA;{&#xA;&#x9;public abstract class BaseIWriteDataImpl&lt;S>: Synchronizer, BaseIWriteData&lt;S>&#xA;&#x9;&#x9;//where C:IPortTypeIterator&#xA;&#x9;&#x9;where S:IPortTypeIterator&#xA;&#x9;{&#xA;&#x9;&#x9;private IPortTypeDataSinkInterface client_port_type = default(IPortTypeDataSinkInterface);&#xA;&#x9;&#x9;protected IPortTypeDataSinkInterface Client_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.client_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.client_port_type = (IPortTypeDataSinkInterface) Services.getPort(&quot;client_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.client_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private S server_port_type = default(S);&#xA;&#x9;&#x9;protected S Server_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.server_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.server_port_type = (S) Services.getPort(&quot;server_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.server_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IString,IInteger>> output_pairs_iterator = null;&#xA;&#x9;&#x9;protected IIterator&lt;IKVPair&lt;IString,IInteger>> Output_pairs_iterator&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_pairs_iterator == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_pairs_iterator = (IIterator&lt;IKVPair&lt;IString,IInteger>>) Services.getPort(&quot;output_pairs_iterator&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_pairs_iterator;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseIWriteDataImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingWriteData/bin/1.0.0.0/BaseIWriteDataImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/bin/1.0.0.0/BaseIBindingDirect.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSinkInterface;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingWriteData;&#xA;using System.Threading;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;using System.Collections.Concurrent;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingWriteData&#xA;{&#xA;&#x9;public class IWriteDataImpl&lt;S> : BaseIWriteDataImpl&lt;S>, IWriteData&lt;S>&#xA;&#x9;&#x9;where S:IPortTypeIterator&#xA;&#x9;{&#xA;&#x9;&#x9;private ConcurrentQueue&lt;Tuple&lt;string,int>> lines = new ConcurrentQueue&lt;Tuple&lt;string, int>>();&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#x9;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private Thread thread_file_writer = null;&#xA;&#xA;&#x9;&#x9;public override void after_initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;client = new IPortTypeDataSinkInterfaceImpl (lines);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;internal class IPortTypeDataSinkInterfaceImpl : IPortTypeDataSinkInterface&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;private Semaphore not_empty = new Semaphore(0,int.MaxValue);&#xA;&#x9;&#x9;&#x9;private S server;&#xA;&#x9;&#x9;&#x9;private ConcurrentQueue&lt;Tuple&lt;string,int>> lines;&#xA;&#x9;&#x9;&#x9;AutoResetEvent e = new AutoResetEvent(false);&#xA;&#xA;&#x9;&#x9;&#x9;public S Server { set {&#x9;server = value; e.Set (); } }&#xA;&#xA;&#x9;&#x9;&#x9;public IPortTypeDataSinkInterfaceImpl(ConcurrentQueue&lt;Tuple&lt;string,int>> lines)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;this.e = e;&#xA;&#x9;&#x9;&#x9;&#x9;this.lines = lines;&#xA;&#x9;&#x9;&#x9;&#x9;this.server = server;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;public ConcurrentQueue&lt;Tuple&lt;string,int>> readCounts ()&#xA;&#x9;&#x9;&#x9;{&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Thread t = new Thread(new ThreadStart(() => &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.WaitOne();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS START&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// SINGLE ITERATION (Count Words)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (!end_iteration) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    Console.WriteLine(&quot;READ COUNTS - ITERATION &quot; + (server==null));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!server.has_next ())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IString,IInteger> bin;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;while (server.fetch_next (out bin_object)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - READ &quot; + count);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;bin = (IKVPairInstance&lt;IString,IInteger>)bin_object;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;string s = ((IStringInstance)bin.Key).Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int c = (int) bin.Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tuple&lt;string, int> tt = new Tuple&lt;string, int> (s, c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;lines.Enqueue (tt);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count = not_empty.Release();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - END CHUNK &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;READ COUNTS - END ITERATION &quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;lines.Enqueue(new Tuple&lt;string,int>(null,0));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;not_empty.Release();&#xA;&#x9;&#x9;&#x9;&#x9;}));&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;t.Start();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;return lines;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;public Semaphore NotEmpty { get { return not_empty; } }&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;private IPortTypeDataSinkInterface client = null;&#xA;&#x9;&#x9;public IPortTypeDataSinkInterface Client { get {&#x9;return client; } }&#xA;&#xA;&#x9;&#x9;private S server = default(S);&#xA;&#x9;&#x9;public S Server { set {&#x9;server = value; ((IPortTypeDataSinkInterfaceImpl)client).Server = server; } }&#xA;&#xA;&#x9;}&#xA;}&#xA;" name="IWriteDataImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingWriteData/bin/1.0.0.0/IWriteDataImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingWriteData/bin/1.0.0.0/BaseIWriteDataImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/bin/1.0.0.0/IBindingDirect.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="98" y="99">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IWriteDataImpl" multiple="false" private="false" replica="0" uRef="client_server" visibleInterface="true">
      <super cRef="base" uRef="client_server"/>
      <visualDescription h="40" w="80" x="146" y="254"/>
    </unit>
  </componentInfo>
</component:component>