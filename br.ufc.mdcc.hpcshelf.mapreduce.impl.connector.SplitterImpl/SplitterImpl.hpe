<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000051eb877356405f912ac67490264dd48afa796542864ecec996c71975fbd6abfb84d8b14d64e3f977b1b83794b518c52bd1f0ee0a72a8e5ce8ecd632926d8fe15e485dff85a0e83db67039467786fa9106afeab5d634a0e2c3c800a699ee307a54d0e6d5260fdca3c8a304287a82ea2bae578a9ef916493dc0ca3593516e26c89" isAbstract="false" kind="Synchronizer" name="SplitterImpl" packagePath="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000bf7a2a92ddb0cde3f7e355a533d367af302bfa48c5514bb8a492cbc4e436d2e8a15a75ff6ce3499f158ab1d06a76891f4db9ae47b609050c603da7b676bcb777b1281658cd6add6d1452884999c368d4b4f10a8cdb5b43df202c1aa1d3722c26066f969ad8e876ffe8cf6d4c6cadd1ac314b3b9f3f685958c9b4bed6e76f0a2" localRef="base" location="br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/Splitter.hpe" name="Splitter" package="br.ufc.mdcc.hpcshelf.mapreduce.connector" version="1.0.0.0">
        <visualDescription h="89" w="174" x="317" y="118">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="bin_function" varName="BF"/>
        <parameter formFieldId="input_key_type" varName="IKey"/>
        <parameter formFieldId="input_value_type" varName="IValue"/>
        <port index_replica="0" localRef="collect_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/EnvironmentBindingBaseDirect.hpe" multiple="false" name="EnvironmentBindingBaseDirect" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="124" x="255" y="482">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###1852505873"/>
          <parameter formFieldId="client_port_type" varName="X###1068838681"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client_server">
            <visualDescription h="20" w="20" x="53" y="7"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="feed_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/EnvironmentBindingBaseDirect.hpe" multiple="false" name="EnvironmentBindingBaseDirect" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="126" x="674" y="513">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###1116755455"/>
          <parameter formFieldId="client_port_type" varName="X###2078476702"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="1" parallel="false" uRef="client_server">
            <visualDescription h="20" w="20" x="54" y="6"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_split_perform" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="83" w="228" x="353" y="397">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1112073092"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" slice_replica="0" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="12" y="34"/>
          </unitBounds>
          <unitBounds facet="0" facet_instance="1" facet_instance_enclosing="1" parallel="true" slice_replica="1" unit_replica="1" uRef="peer">
            <visualDescription h="20" w="20" x="181" y="36"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_split_read_chunk" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="70" w="303" x="7" y="405">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1418969395"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="135" y="6"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="task_binding_split_chunk_ready" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="71" w="298" x="671" y="424">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###351033843"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="1" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="131" y="7"/>
          </unitBounds>
        </port>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="collector">
          <visualDescription h="20" w="20" x="31" y="54"/>
        </unitBounds>
        <unitBounds facet="1" facet_instance="0" facet_instance_enclosing="1" parallel="true" uRef="feeder">
          <visualDescription h="20" w="20" x="126" y="53"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
    <facet_configuration facet="1" multiple="false"/>
  </header>
  <componentInfo>
    <innerComponent localRef="in" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
      <visualDescription h="60" w="100" x="103" y="613">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="imk" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="107" y="694">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="imv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="121" y="766">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="252" y="777">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omk" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="250" y="682">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="ork" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="387" y="686">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="orv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="392" y="765">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="out" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
      <visualDescription h="60" w="100" x="692" y="75">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="bf" location="br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/PartitionFunction.hpe" multiple="false" name="PartitionFunction" package="br.ufc.mdcc.hpcshelf.mapreduce.custom" exposed="false">
      <visualDescription h="60" w="100" x="416" y="741">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="input_key" varName="IKey"/>
      <unitBounds facet="0" facet_instance="0" parallel="false" uRef="partition_function">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="c" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="417" y="731">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="529" y="734">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="maintainer_map" location="br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost/ComputeHost.hpe" multiple="false" name="ComputeHost" package="br.ufc.mdcc.hpcshelf.platform.maintainer" exposed="false">
      <visualDescription h="60" w="100" x="69" y="193">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="compute_host">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="maintainer_reduce" location="br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost/ComputeHost.hpe" multiple="false" name="ComputeHost" package="br.ufc.mdcc.hpcshelf.platform.maintainer" exposed="false">
      <visualDescription h="60" w="100" x="138" y="56">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds facet="0" facet_instance="0" parallel="true" uRef="compute_host">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="in" direct="true" varName="IN"/>
    <supplyParameter cRef="out" direct="true" varName="OUT"/>
    <supplyParameter cRef="imk" direct="true" varName="IKey"/>
    <supplyParameter cRef="imv" direct="true" varName="IValue"/>
    <supplyParameter cRef="omk" direct="true" varName="TKey"/>
    <supplyParameter cRef="omv" direct="true" varName="TValue"/>
    <supplyParameter cRef="ork" direct="true" varName="OKey"/>
    <supplyParameter cRef="orv" direct="true" varName="OValue"/>
    <supplyParameter cRef="bf" direct="true" varName="BF"/>
    <supplyParameter cRef="c" direct="true" varName="C"/>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <supplyParameter cRef="maintainer_reduce" direct="true" varName="M0"/>
    <supplyParameter cRef="maintainer_map" direct="true" varName="M1"/>
    <interface iRef="ISplitterCollectorImpl" nArgs="3">
      <slice isRef="collect_pairs">
        <originRef cRef="collect_pairs" iRef="IBindingDirect"/>
        <visualDescription h="10" w="10" x="28" y="20"/>
      </slice>
      <slice isRef="task_binding_split_perform">
        <originRef cRef="task_binding_split_perform" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="92" y="29"/>
      </slice>
      <slice isRef="task_binding_split_read_chunk">
        <originRef cRef="task_binding_split_read_chunk" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="45" y="21"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="115" y="12"/>
      </slice>
      <slice isRef="xxx">
        <originRef cRef="xxx" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="22" y="7"/>
      </slice>
      <slice isRef="bin_function">
        <originRef cRef="bin_function" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="20" x="22" y="7"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvancePerform;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvanceReadChunk;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterCollectorImpl&lt;IKey,IValue,BF>: Synchronizer, BaseISplitterCollector&lt;IKey,IValue, BF>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IKey>&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_COLLECT = 0;&#xA;&#x9;&#x9;static protected int FACET_FEED = 1;&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvancePerform> task_binding_split_perform = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvancePerform> Task_binding_split_perform&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split_perform == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split_perform = (ITaskPort&lt;ITaskPortTypeAdvancePerform>) Services.getPort(&quot;task_binding_split_perform&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split_perform;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvanceReadChunk> task_binding_split_read_chunk = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvanceReadChunk> Task_binding_split_read_chunk&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split_read_chunk == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split_read_chunk = (ITaskPort&lt;ITaskPortTypeAdvanceReadChunk>) Services.getPort(&quot;task_binding_split_read_chunk&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split_read_chunk;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IClientBase&lt;IPortTypeIterator> collect_pairs = null;&#xA;&#xA;&#x9;&#x9;public IClientBase&lt;IPortTypeIterator> Collect_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.collect_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.collect_pairs = (IClientBase&lt;IPortTypeIterator>) Services.getPort(&quot;collect_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.collect_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private BF bin_function = default(BF);&#xA;&#x9;&#x9;protected BF Bin_function&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.bin_function == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.bin_function = (BF) Services.getPort(&quot;bin_function&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.bin_function;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IKey input_key = default(IKey);&#xA;&#x9;&#x9;protected IKey Input_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_key = (IKey) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IInteger output_key = null;&#xA;&#x9;&#x9;protected IInteger Output_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_key = (IInteger) Services.getPort(&quot;output_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseISplitterCollectorImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IClientBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterCollector.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.ReadChunkActionType;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.PerformActionType;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterCollectorImpl&lt;IKey, IValue, BF> : BaseISplitterCollectorImpl&lt;IKey, IValue, BF>, ISplitterCollector&lt;IKey, IValue, BF>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IKey>&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SPLIT_NEW_CHUNK = 246;&#xA;&#x9;&#x9;static private int TAG_SPLIT_EOS_CHUNK = 247;&#xA;&#xA;&#x9;&#x9;private static int CHUNK_SIZE = 50;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;//Collect_pairs.TraceFlag = true;&#x9;Split_channel.TraceFlag = true;&#x9;Task_binding_split_perform.TraceFlag = true; Task_binding_split_read_chunk.TraceFlag = true;&#xA;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IKey,IValue>> input_instance = (IIteratorInstance&lt;IKVPair&lt;IKey,IValue>>) Collect_pairs.Client;&#xA;&#xA;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int>> ();&#xA;&#x9;&#x9;&#x9;int m_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_FEED]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = m_size;&#xA;&#x9;&#x9;&#x9;&#x9;m_size += this.UnitSizeInFacet [i] [&quot;feeder&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k = 0, j = nr0; j &lt; m_size; k++, j++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int> (i, k);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Bin_function.NumberOfPartitions = m_size;&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterCollector : ENTER LOOP&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;bool end_computation = false;&#xA;&#x9;&#x9;&#x9;while (!end_computation) // new iteration&#xA;&#x9;&#x9;&#x9;{    &#xA;&#x9;&#x9;&#x9;&#x9;end_computation = true;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;&#x9;while (!end_iteration) // take next chunk ...&#xA;&#x9;&#x9;&#x9;&#x9;{  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterCollector : TRY READ CHUNK !&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_split_read_chunk.invoke (READ_CHUNK.name);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_split_perform.invoke (PERFORM.name, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterCollector : PERFORM started !&quot;, this.Rank);&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IKey,IValue>>[] buffer = new IList&lt;IKVPairInstance&lt;IKey,IValue>>[m_size];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [i] = new List&lt;IKVPairInstance&lt;IKey,IValue>> ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!input_instance.has_next ())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_computation = false;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterCollector : START READING CHUNK ! {1}&quot;, this.Rank, end_iteration);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (input_instance.fetch_next (out bin_object)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//Console.WriteLine (&quot;{0}: ISplitterCollector : CHUNK {1}!&quot;, this.Rank, count);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IKey,IValue> item = (IKVPairInstance&lt;IKey,IValue>)bin_object;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this.Input_key.Instance = item.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Bin_function.go ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int index = ((IIntegerInstance)this.Output_key.Instance).Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [index].Add (item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// SEND REMAINING PAIRS AND CLOSES THE CHUNK LIST&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Split_channel.Send (buffer [i], unit_ref [i], end_iteration ? TAG_SPLIT_EOS_CHUNK : TAG_SPLIT_NEW_CHUNK);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterReduceCollector END COMPUTATION &quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;input_instance.finish ();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterCollectorImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterCollectorImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterCollector.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="137" x="102" y="302">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="collect_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="collect_pairs"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="task_binding_split_perform"/>
      </port>
      <port name="task_binding_split_read_chunk">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_read_chunk" sRef="task_binding_split_read_chunk"/>
      </port>
      <parameter iname="IData" order="0" parid="input_key_type" uname="data" varid="IKey"/>
      <parameter iname="IData" order="1" parid="input_value_type" uname="data" varid="IValue"/>
      <parameter iname="IPartitionFunction" order="2" parid="bin_function" uname="partition_function" varid="BF"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="ISplitterFeederImpl" nArgs="2">
      <slice isRef="feed_pairs">
        <originRef cRef="feed_pairs" iRef="IBindingDirect"/>
        <visualDescription h="10" w="10" x="71" y="28"/>
      </slice>
      <slice isRef="task_binding_split_perform">
        <originRef cRef="task_binding_split_perform" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="11" y="25"/>
      </slice>
      <slice isRef="task_binding_split_chunk_ready">
        <originRef cRef="task_binding_split_chunk_ready" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="145" y="21"/>
      </slice>
      <slice isRef="output">
        <originRef cRef="output" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="43" y="16"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="0" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvanceChunkReady;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvancePerform;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterFeederImpl&lt;IKey, IValue>: Synchronizer, BaseISplitterFeeder&lt;IKey, IValue>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_COLLECT = 0;&#xA;&#x9;&#x9;static protected int FACET_FEED = 1;&#xA;&#xA;&#xA;&#x9;&#x9;private IServerBase&lt;IPortTypeIterator> feed_pairs = null;&#xA;&#xA;&#x9;&#x9;public IServerBase&lt;IPortTypeIterator> Feed_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.feed_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.feed_pairs = (IServerBase&lt;IPortTypeIterator>) Services.getPort(&quot;feed_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.feed_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IKey,IValue>> output = null;&#xA;&#x9;&#x9;protected IIterator&lt;IKVPair&lt;IKey,IValue>> Output {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output = (IIterator&lt;IKVPair&lt;IKey,IValue>>)Services.getPort(&quot;output&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvancePerform> task_binding_split_perform = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvancePerform> Task_binding_split_perform&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split_perform == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split_perform = (ITaskPort&lt;ITaskPortTypeAdvancePerform>) Services.getPort(&quot;task_binding_split_perform&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split_perform;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvanceChunkReady> task_binding_split_chunk_ready = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvanceChunkReady> Task_binding_split_chunk_ready&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split_chunk_ready == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split_chunk_ready = (ITaskPort&lt;ITaskPortTypeAdvanceChunkReady>) Services.getPort(&quot;task_binding_split_chunk_ready&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split_chunk_ready;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;}" name="BaseISplitterFeederImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterFeederImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IServerBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterFeeder.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.common.Data;&#xA;using System.Diagnostics;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.ChunkReadyActionType;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.advance.PerformActionType;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterFeederImpl&lt;IKey, IValue>: BaseISplitterFeederImpl&lt;IKey, IValue>, ISplitterFeeder&lt;IKey, IValue>&#xA;&#x9;&#x9;where IKey:IData&#xA;&#x9;&#x9;where IValue:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SPLIT_NEW_CHUNK = 246;&#xA;&#x9;&#x9;static private int TAG_SPLIT_END_CHUNK = 247;&#xA;&#xA;&#x9;&#x9;private IIteratorInstance&lt;IKVPair&lt;IKey,IValue>> output_instance = null;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// Feed_pairs.TraceFlag = true; Split_channel.TraceFlag = true; Task_binding_split_perform.TraceFlag = true; Task_binding_split_chunk_ready.TraceFlag = true;&#xA;&#xA;&#x9;&#x9;&#x9;output_instance = (IIteratorInstance&lt;IKVPair&lt;IKey,IValue>>)Output.Instance;&#xA;&#x9;&#x9;&#x9;Feed_pairs.Server = output_instance;&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int>> ();&#xA;&#x9;&#x9;&#x9;// RECEIVE PAIRS FROM THE REDUCERS (next iterations)&#xA;&#x9;&#x9;&#x9;int senders_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_COLLECT]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = senders_size;&#xA;&#x9;&#x9;&#x9;&#x9;senders_size += this.UnitSizeInFacet [i] [&quot;collector&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k = 0, j = nr0; j &lt; senders_size; k++, j++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int> (i, k);&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : ENTER LOOP&quot;,this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;CompletedStatus status;&#xA;&#xA;&#x9;&#x9;&#x9;bool end_computation = false;&#xA;&#x9;&#x9;&#x9;while (!end_computation)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;end_computation = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : TRY READ CHUNK !&quot;, this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IList&lt;int> inactive_senders = new List&lt;int>();&#xA;&#x9;&#x9;&#x9;&#x9;IList&lt;int> active_senders = new List&lt;int>();&#xA;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; senders_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;active_senders.Add (i);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;bool has_chunk = false;&#xA;&#x9;&#x9;&#x9;&#x9;while (active_senders.Count > 0) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_split_perform.invoke (PERFORM.name, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : PERFORM started !&quot;,this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (int i in active_senders) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : BEGIN RECEIVE FROM SENDER {1} !&quot;,this.Rank, i);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IKey,IValue>> buffer;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Split_channel.Receive (unit_ref[i], MPI.Communicator.anyTag, out buffer, out status);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// In practice, it is expected that all senders send TAG_SPLIT_END_CHUNK in the same (last) iteration.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (status.Tag == TAG_SPLIT_END_CHUNK)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;inactive_senders.Add(i);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;has_chunk = true;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (IKVPairInstance&lt;IKey,IValue> kv in buffer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.put (kv);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : END RECEIVE FROM SENDER {1} !&quot;,this.Rank, i);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (has_chunk)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_computation = false;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (int i in inactive_senders)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;active_senders.Remove (i);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : FINISH CHUNK !&quot;,this.Rank);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// CHUNK_READY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_binding_split_chunk_ready.invoke (CHUNK_READY.name);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;{0}: ISplitterFeeder : END !&quot;,this.Rank);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterFeederImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterFeederImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterFeederImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterFeeder.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="182" x="644" y="334">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="feed_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="feed_pairs"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="task_binding_split_perform"/>
      </port>
      <port name="task_binding_split_chunk_ready">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_chunk_ready" sRef="task_binding_split_chunk_ready"/>
      </port>
      <parameter iname="IData" order="0" parid="input_key_type" uname="data" varid="IKey"/>
      <parameter iname="IData" order="1" parid="input_value_type" uname="data" varid="IValue"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="ISplitterCollectorImpl" multiple="true" private="false" replica="0" uRef="collector" visibleInterface="true">
      <super cRef="base" uRef="collector"/>
      <visualDescription h="40" w="137" x="150" y="412"/>
    </unit>
    <unit facet="1" iRef="ISplitterFeederImpl" multiple="true" private="false" replica="0" uRef="feeder" visibleInterface="true">
      <super cRef="base" uRef="feeder"/>
      <visualDescription h="40" w="182" x="613" y="412"/>
    </unit>
  </componentInfo>
</component:component>