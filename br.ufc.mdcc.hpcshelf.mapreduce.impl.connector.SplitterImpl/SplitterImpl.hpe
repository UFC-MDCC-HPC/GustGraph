<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c74f48803e22768fccd6d803ac7bd52e552e424f3cdcd9282d1c6477a945dd44febf94e1697d3bd215162db18218ad8731e9df4b02b13e190920631ab0d372671f1e2f144b3128478ae6b79e7b2950cd7ac8885db64314c6d1d0cf408da58ad59fc94ab60fecb8ce917e7edcb2340e0fa2068e6780eb15c025ca0ca191f41895" isAbstract="false" kind="Synchronizer" name="SplitterImpl" packagePath="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007d28c0f038750a5f0f5a5cab521d91d94a08babb3e92b7d64dedd4f606e7e806faa2463b992699b104ac4c1650623b43c824f10e500b4fba2532151da56ddd46a152d8893501afac175acc8c5de6d1f46e19207da85b8d991facb756f8b5dc17a4a020176fb54a2a4bd54c0e1fe52c8a80f0b5734733d902b8adf61deca2c99d" localRef="base" location="br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/Splitter.hpe" name="Splitter" package="br.ufc.mdcc.hpcshelf.mapreduce.connector" version="1.0.0.0">
        <visualDescription h="89" w="174" x="362" y="334">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="input_map_key" varName="IMK"/>
        <parameter formFieldId="input_map_value" varName="IMV"/>
        <parameter formFieldId="output_reduce_key" varName="ORK"/>
        <parameter formFieldId="bin_function" varName="BF"/>
        <parameter formFieldId="output_reduce_value" varName="ORV"/>
        <port localRef="sink" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/EnvironmentBindingBase.hpe" multiple="false" name="EnvironmentBindingBase" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="156" x="405" y="30">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###621172987"/>
          <parameter formFieldId="server_port_type" varName="X###1641243923"/>
          <unitBounds parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="128" y="21"/>
          </unitBounds>
          <unitBounds parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="6" y="19"/>
          </unitBounds>
        </port>
        <port localRef="source" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/EnvironmentBindingBase.hpe" multiple="false" name="EnvironmentBindingBase" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="175" x="395" y="110">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###2106651793"/>
          <parameter formFieldId="server_port_type" varName="X###933796862"/>
          <unitBounds parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="7" y="18"/>
          </unitBounds>
          <unitBounds parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="142" y="24"/>
          </unitBounds>
        </port>
        <port localRef="collect_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/EnvironmentBindingBase.hpe" multiple="false" name="EnvironmentBindingBase" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="124" x="255" y="482">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###513367358"/>
          <parameter formFieldId="server_port_type" varName="X###1723375907"/>
          <unitBounds parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port localRef="feed_pairs" location="br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/EnvironmentBindingBase.hpe" multiple="false" name="EnvironmentBindingBase" package="br.ufc.mdcc.hpc.storm.binding.environment" exposed="true">
          <visualDescription h="60" w="126" x="674" y="513">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="client_port_type" varName="X###1666921860"/>
          <parameter formFieldId="server_port_type" varName="X###2031525905"/>
          <unitBounds parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port localRef="task_binding_split" location="br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/TaskBindingAdvance.hpe" multiple="false" name="TaskBindingAdvance" package="br.ufc.mdcc.hpcshelf.mapreduce.binding.task" exposed="true">
          <visualDescription h="83" w="228" x="365" y="542">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" slice_replica="0" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="49" y="9"/>
          </unitBounds>
          <unitBounds parallel="true" slice_replica="1" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="88" y="6"/>
          </unitBounds>
          <unitBounds parallel="true" slice_replica="2" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="122" y="8"/>
          </unitBounds>
          <unitBounds parallel="true" slice_replica="3" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="144" y="8"/>
          </unitBounds>
        </port>
        <port localRef="task_binding_data" location="br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingData/TaskBindingData.hpe" multiple="false" name="TaskBindingData" package="br.ufc.mdcc.hpcshelf.mapreduce.binding.task" exposed="true">
          <visualDescription h="60" w="193" x="598" y="563">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" slice_replica="0" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds parallel="true" slice_replica="1" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="27" y="2"/>
          </unitBounds>
          <unitBounds parallel="true" slice_replica="2" unit_replica="0" uRef="peer">
            <visualDescription h="20" w="20" x="49" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="reduce_collector">
          <visualDescription h="20" w="20" x="31" y="54"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="map_feeder">
          <visualDescription h="20" w="20" x="126" y="53"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="read_input">
          <visualDescription h="20" w="20" x="15" y="21"/>
        </unitBounds>
        <unitBounds parallel="false" uRef="write_output">
          <visualDescription h="20" w="20" x="130" y="14"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent localRef="in" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
      <visualDescription h="60" w="100" x="103" y="613">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="imk" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="107" y="694">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="imv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="121" y="766">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="252" y="777">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="omk" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="250" y="682">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="ork" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="387" y="686">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="orv" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="392" y="765">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="out" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
      <visualDescription h="60" w="100" x="692" y="75">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="bf" location="br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/PartitionFunction.hpe" multiple="false" name="PartitionFunction" package="br.ufc.mdcc.hpcshelf.mapreduce.custom" exposed="false">
      <visualDescription h="60" w="100" x="416" y="741">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="input_key" varName="IMK"/>
      <unitBounds parallel="false" uRef="partition_function">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="c" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="417" y="731">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/PortTypeIterator.hpe" multiple="false" name="PortTypeIterator" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="529" y="734">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="dss" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSourceInterface/PortTypeDataSourceInterface.hpe" multiple="false" name="PortTypeDataSourceInterface" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="401" y="196">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="dws" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSinkInterface/PortTypeDataSinkInterface.hpe" multiple="false" name="PortTypeDataSinkInterface" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="547" y="712">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="in" direct="true" varName="IN"/>
    <supplyParameter cRef="out" direct="true" varName="OUT"/>
    <supplyParameter cRef="imk" direct="true" varName="IMK"/>
    <supplyParameter cRef="imv" direct="true" varName="IMV"/>
    <supplyParameter cRef="omk" direct="true" varName="OMK"/>
    <supplyParameter cRef="omv" direct="true" varName="OMV"/>
    <supplyParameter cRef="ork" direct="true" varName="ORK"/>
    <supplyParameter cRef="orv" direct="true" varName="ORV"/>
    <supplyParameter cRef="bf" direct="true" varName="BF"/>
    <supplyParameter cRef="c" direct="true" varName="C"/>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <supplyParameter cRef="dss" direct="true" varName="DSS"/>
    <supplyParameter cRef="dws" direct="true" varName="DWS"/>
    <interface iRef="ISplitterReduceCollectorImpl" nArgs="3">
      <slice isRef="task_binding_split">
        <originRef cRef="task_binding_split" iRef="ITaskBindingAdvance"/>
        <visualDescription h="10" w="10" x="0" y="0"/>
      </slice>
      <slice isRef="collect_pairs">
        <originRef cRef="collect_pairs" iRef="IClientBase"/>
        <visualDescription h="10" w="10" x="28" y="20"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="115" y="12"/>
      </slice>
      <slice isRef="bin_function_iterate">
        <originRef cRef="bin_function_iterate" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="10" x="3" y="0"/>
      </slice>
      <slice isRef="input_reduce_collector">
        <originRef cRef="input_reduce_collector" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="0" y="22"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterReduceCollectorImpl&lt;IMK, IMV, BF>: Synchronizer, BaseISplitterReduceCollector&lt;IMK, IMV, BF>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IMK>&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_REDUCE = 0;&#xA;&#x9;&#x9;static protected int FACET_MAP = 1;&#xA;&#x9;&#x9;static protected int FACET_SOURCE = 2;&#xA;&#x9;&#x9;static protected int FACET_SINLK = 3;&#xA;&#xA;&#x9;&#x9;private ITaskBindingAdvance task_binding_split = null;&#xA;&#xA;&#x9;&#x9;protected ITaskBindingAdvance Task_binding_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split = (ITaskBindingAdvance) Services.getPort(&quot;task_binding_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvance> task_port_split = null;&#xA;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvance> Task_port_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_port_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_port_split = (ITaskPort&lt;ITaskPortTypeAdvance>) Services.getPort(&quot;task_port_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_port_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IClientBase&lt;IPortTypeIterator> collect_pairs = null;&#xA;&#xA;&#x9;&#x9;protected IClientBase&lt;IPortTypeIterator> Collect_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.collect_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.collect_pairs = (IClientBase&lt;IPortTypeIterator>) Services.getPort(&quot;collect_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.collect_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private BF bin_function_iterate = default(BF);&#xA;&#x9;&#x9;protected BF Bin_function_iterate&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.bin_function_iterate == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.bin_function_iterate = (BF) Services.getPort(&quot;bin_function_iterate&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.bin_function_iterate;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IMK input_key = default(IMK);&#xA;&#x9;&#x9;protected IMK Input_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_key = (IMK) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IInteger output_key = null;&#xA;&#x9;&#x9;protected IInteger Output_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_key = (IInteger) Services.getPort(&quot;output_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IMK input_key_iterate = default(IMK);&#xA;&#x9;&#x9;protected IMK Input_key_iterate&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_key_iterate == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_key_iterate = (IMK) Services.getPort(&quot;input_key_iterate&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_key_iterate;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IInteger output_key_iterate = null;&#xA;&#x9;&#x9;protected IInteger Output_key_iterate&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_key_iterate == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_key_iterate = (IInteger) Services.getPort(&quot;output_key_iterate&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_key_iterate;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseISplitterReduceCollectorImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterReduceCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IClientBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterReduceCollector.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterReduceCollectorImpl&lt;IMK, IMV, BF> : BaseISplitterReduceCollectorImpl&lt;IMK, IMV, BF>, ISplitterReduceCollector&lt;IMK, IMV, BF>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IMK>&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV = 246;&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV_FINISH = 247;&#xA;&#xA;&#x9;&#x9;static private int CHUNK_SIZE = 10;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IMK,IMV>> input_instance = (IIteratorInstance&lt;IKVPair&lt;IMK,IMV>>) Collect_pairs.Service;&#xA;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;// DETERMINE COMMUNICATION TARGETs&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int,int>> ();&#xA;&#x9;&#x9;&#x9;int m_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_MAP]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = m_size;&#xA;&#x9;&#x9;&#x9;&#x9;m_size += this.UnitSizeInFacet [i] [&quot;map_feeder&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k=0, j=nr0; j &lt; m_size; k++, j++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int,int> (i,0 /*index of MAP_FEEDER*/,k);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;while (true) // new iteration&#xA;&#x9;&#x9;&#x9;{    &#xA;&#x9;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;&#x9;while (!end_iteration) // take next chunk&#xA;&#x9;&#x9;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_port_split.invoke (ITaskPortAdvance.READ_CHUNK);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_port_split.invoke (ITaskPortAdvance.PERFORM, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Bin_function_iterate.NumberOfPartitions = m_size;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IMK,IData>>[] buffer = new IList&lt;IKVPairInstance&lt;IMK,IData>>[m_size];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [i] = new List&lt;IKVPairInstance&lt;IMK,IData>> ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (input_instance.fetch_next (out bin_object) &amp;&amp; count &lt; CHUNK_SIZE) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IMK,IData> item = (IKVPairInstance&lt;IMK,IData>)bin_object;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this.Input_key_iterate.Instance = item.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Bin_function_iterate.go ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int index = ((IIntegerInstance)this.Output_key_iterate.Instance).Value;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [index].Add (item);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// PERFORM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Split_channel.Send (buffer [i], unit_ref [i], TAG_SPLIT_IMV);&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (count &lt; CHUNK_SIZE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;// Inform the end of the iteration&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;Split_channel.Send (new List&lt;IKVPairInstance&lt;IMK,IData>> (), unit_ref [i], TAG_SPLIT_IMV_FINISH);&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterReduceCollectorImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterReduceCollectorImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterReduceCollectorImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterReduceCollector.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="137" x="93" y="334">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="task_binding_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split" sRef="task_binding_split"/>
      </port>
      <port name="task_port_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_split"/>
      </port>
      <port name="collect_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="collect_pairs"/>
      </port>
      <port name="output_key_iterate">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_key" sRef="bin_function_iterate"/>
      </port>
      <port name="input_key_iterate">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="input_key" sRef="bin_function_iterate"/>
      </port>
      <parameter iname="IPartitionFunction" order="2" parid="bin_function" uname="partition_function" varid="BF"/>
      <parameter iname="IData" order="0" parid="input_map_key" uname="data" varid="IMK"/>
      <parameter iname="IData" order="1" parid="input_map_value" uname="data" varid="IMV"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="ISplitterMapFeederImpl" nArgs="2">
      <slice isRef="task_binding_split">
        <originRef cRef="task_binding_split" iRef="ITaskBindingAdvance"/>
        <visualDescription h="10" w="10" x="0" y="0"/>
      </slice>
      <slice isRef="feed_pairs">
        <originRef cRef="feed_pairs" iRef="IServerBase"/>
        <visualDescription h="10" w="10" x="71" y="28"/>
      </slice>
      <slice isRef="task_binding_data">
        <originRef cRef="task_binding_data" iRef="ITaskBindingData"/>
        <visualDescription h="10" w="10" x="18" y="0"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="9" y="13"/>
      </slice>
      <slice isRef="output_map_feeder">
        <originRef cRef="output_map_feeder" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="0" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterMapFeederImpl&lt;IMK, IMV>: Synchronizer, BaseISplitterMapFeeder&lt;IMK, IMV>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_REDUCE = 0;&#xA;&#x9;&#x9;static protected int FACET_MAP = 1;&#xA;&#x9;&#x9;static protected int FACET_SOURCE = 2;&#xA;&#x9;&#x9;static protected int FACET_SINLK = 3;&#xA;&#xA;&#x9;&#x9;private ITaskBindingAdvance task_binding_split = null;&#xA;&#x9;&#x9;protected ITaskBindingAdvance Task_binding_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split = (ITaskBindingAdvance) Services.getPort(&quot;task_binding_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvance> task_port_split = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvance> Task_port_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_port_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_port_split = (ITaskPort&lt;ITaskPortTypeAdvance>) Services.getPort(&quot;task_port_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_port_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IServerBase&lt;IPortTypeIterator> feed_pairs = null;&#xA;&#xA;&#x9;&#x9;protected IServerBase&lt;IPortTypeIterator> Feed_pairs&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.feed_pairs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.feed_pairs = (IServerBase&lt;IPortTypeIterator>) Services.getPort(&quot;feed_pairs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.feed_pairs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IMK,IMV>> output = null;&#xA;&#x9;&#x9;protected IIterator&lt;IKVPair&lt;IMK,IMV>> Output {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output = (IIterator&lt;IKVPair&lt;IMK,IMV>>)Services.getPort(&quot;output&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseISplitterMapFeederImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterMapFeederImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance/bin/1.0.0.0/ITaskBindingAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IServerBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator/bin/1.0.0.0/IPortTypeIterator.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance/bin/1.0.0.0/ITaskPortTypeAdvance.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterMapFeeder.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.common.Data;&#xA;using System.Diagnostics;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterMapFeederImpl&lt;IMK, IMV>: BaseISplitterMapFeederImpl&lt;IMK, IMV>, ISplitterMapFeeder&lt;IMK, IMV>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV = 246;&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV_FINISH = 247;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IMK,IMV>> output_instance = (IIteratorInstance&lt;IKVPair&lt;IMK,IMV>>)Output.Instance;&#xA;&#x9;&#x9;&#x9;Feed_pairs.Service = output_instance;&#xA;&#xA;&#x9;&#x9;&#x9;// RECEIVE PAIR FROM THE SOURCE (1st iteration)&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int,int>> ();&#xA;&#x9;&#x9;&#x9;unit_ref.Add (0, new Tuple&lt;int,int,int> (this.FacetIndexes[FACET_SOURCE][0],0 /*?*/,0));&#xA;&#x9;&#x9;&#x9;receive_pairs_iteration (output_instance, 1,unit_ref);&#xA;&#xA;&#x9;&#x9;&#x9;// RECEIVE PAIRS FROM THE REDUCERS (next iterations)&#xA;&#x9;&#x9;&#x9;unit_ref = new Dictionary&lt;int, Tuple&lt;int,int,int>> ();&#xA;&#x9;&#x9;&#x9;int senders_size = 0;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_REDUCE]) &#xA;&#x9;&#x9;&#x9;{   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = senders_size;&#xA;&#x9;&#x9;&#x9;&#x9;senders_size += this.UnitSizeInFacet [i] [&quot;reduce_collector&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k=0, j=nr0; j &lt; senders_size; k++, j++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int,int> (i,0 /*INDEX OF reduce_collector*/,k);&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;receive_pairs_iteration (output_instance, senders_size, unit_ref);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private void receive_pairs_iteration(IIteratorInstance&lt;IKVPair&lt;IMK,IMV>> output_instance, int senders_size, IDictionary&lt;int,Tuple&lt;int,int,int>> unit_ref)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;while (true)    // next iteration&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;int count_finished_streams = 0;&#xA;&#x9;&#x9;&#x9;&#x9;while (count_finished_streams == 0)     // take next chunk ... &#xA;&#x9;&#x9;&#x9;&#x9;{  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// PERFORM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; senders_size; i++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IMK,IData>> buffer;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CompletedStatus status;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Split_channel.Receive (unit_ref [i], MPI.Communicator.anyTag, out buffer, out status);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;foreach (IKVPairInstance&lt;IMK,IData> kv in buffer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.put (kv);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (status.Tag == TAG_SPLIT_IMV_FINISH)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count_finished_streams++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;output_instance.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Debug.Assert (count_finished_streams == 0 || count_finished_streams == senders_size);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// CHUNK_READY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Task_port_split.invoke (ITaskPortAdvance.CHUNK_READY);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// send empty iterator to inform the mappers the end of the iteration ...&#xA;&#x9;&#x9;&#x9;&#x9;output_instance.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterMapFeederImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterMapFeederImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterMapFeederImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterMapFeeder.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="182" x="644" y="334">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="task_binding_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split" sRef="task_binding_split"/>
      </port>
      <port name="task_port_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_split"/>
      </port>
      <port name="feed_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="feed_pairs"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="task_binding_data"/>
      </port>
      <port name="task_port_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_data"/>
      </port>
      <parameter iname="IData" order="0" parid="input_map_key" uname="data" varid="IMK"/>
      <parameter iname="IData" order="1" parid="input_map_value" uname="data" varid="IMV"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="ISplitterReadSourceImpl" nArgs="3">
      <slice isRef="task_binding_split">
        <originRef cRef="task_binding_split" iRef="ITaskBindingAdvance"/>
        <visualDescription h="10" w="10" x="80" y="0"/>
      </slice>
      <slice isRef="source">
        <originRef cRef="source" iRef="IClientBase"/>
        <visualDescription h="10" w="10" x="100" y="2"/>
      </slice>
      <slice isRef="task_binding_data">
        <originRef cRef="task_binding_data" iRef="ITaskBindingData"/>
        <visualDescription h="10" w="10" x="62" y="0"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="89" y="23"/>
      </slice>
      <slice isRef="bin_function">
        <originRef cRef="bin_function" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="10" x="24" y="19"/>
      </slice>
      <slice isRef="input_read_input">
        <originRef cRef="input_read_input" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="0" y="25"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterReadSourceImpl&lt;IMK, IMV, BF>: Synchronizer, BaseISplitterReadSource&lt;IMK, IMV, BF>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IMK>&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_REDUCE = 0;&#xA;&#x9;&#x9;static protected int FACET_MAP = 1;&#xA;&#x9;&#x9;static protected int FACET_SOURCE = 2;&#xA;&#x9;&#x9;static protected int FACET_SINLK = 3;&#xA;&#xA;&#x9;&#x9;private BF bin_function = default(BF);&#xA;&#xA;&#x9;&#x9;protected BF Bin_function&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.bin_function == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.bin_function = (BF) Services.getPort(&quot;bin_function&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.bin_function;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IClientBase&lt;IPortTypeIterator> source = null;&#xA;&#xA;&#x9;&#x9;public IClientBase&lt;IPortTypeIterator> Source&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.source == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.source = (IClientBase&lt;IPortTypeIterator>) Services.getPort(&quot;source&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.source;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ITaskBindingAdvance task_binding_split = null;&#xA;&#x9;&#x9;protected ITaskBindingAdvance Task_binding_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split = (ITaskBindingAdvance) Services.getPort(&quot;task_binding_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvance> task_port_split = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvance> Task_port_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_port_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_port_split = (ITaskPort&lt;ITaskPortTypeAdvance>) Services.getPort(&quot;task_port_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_port_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IMK input_key = default(IMK);&#xA;&#x9;&#x9;protected IMK Input_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_key = (IMK) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IInteger output_key = null;&#xA;&#x9;&#x9;protected IInteger Output_key&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_key = (IInteger) Services.getPort(&quot;output_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;}" name="BaseISplitterReadSourceImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterReadSourceImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/bin/1.0.0.0/IPartitionFunction.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IClientBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSourceInterfaceSplitter/bin/1.0.0.0/IPortTypeDataSourceInterfaceSplitter.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterReadSource.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterReadSourceImpl&lt;IMK, IMV, BF> : BaseISplitterReadSourceImpl&lt;IMK, IMV, BF>, ISplitterReadSource&lt;IMK, IMV, BF>&#xA;&#x9;&#x9;where IMK:IData&#xA;&#x9;&#x9;where IMV:IData&#xA;&#x9;&#x9;where BF:IPartitionFunction&lt;IMK>&#xA;&#x9;{&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV = 246;&#xA;&#x9;&#x9;static private int TAG_SPLIT_IMV_FINISH = 247;&#xA;&#xA;&#x9;&#x9;static private int CHUNK_SIZE = 10;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IMK,IMV>> input_instance = (IIteratorInstance&lt;IKVPair&lt;IMK,IMV>>)Source.Service;&#xA;&#x9;&#x9;&#x9;object bin_object = null;&#xA;&#xA;&#x9;&#x9;&#x9;// CALCULATE TARGETs&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int,Tuple&lt;int,int,int>> unit_ref = new Dictionary&lt;int, Tuple&lt;int,int,int>> ();&#xA;&#x9;&#x9;&#x9;int nf = this.FacetMultiplicity [FACET_MAP];&#xA;&#x9;&#x9;&#x9;int m_size = 1;&#xA;&#x9;&#x9;&#x9;foreach (int i in this.FacetIndexes[FACET_MAP]) {   &#xA;&#x9;&#x9;&#x9;&#x9;int nr0 = m_size;&#xA;&#x9;&#x9;&#x9;&#x9;m_size += this.UnitSizeInFacet [i] [&quot;map_feeder&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k = 0, j = nr0; j &lt; m_size; k++, j++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;unit_ref [j] = new Tuple&lt;int,int,int> (i, 0/* INDEX OF map_feeder */,k);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;bool end_iteration = false;&#xA;&#x9;&#x9;&#x9;while (!end_iteration) // take next chunk&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;IActionFuture sync_perform;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/* All the pairs will be read from the source in a single chunk */&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Task_port_split.invoke (ITaskPortAdvance.READ_CHUNK);&#xA;&#x9;&#x9;&#x9;&#x9;Task_port_split.invoke (ITaskPortAdvance.PERFORM, out sync_perform);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Bin_function.NumberOfPartitions = m_size;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IMK,IData>>[] buffer = new IList&lt;IKVPairInstance&lt;IMK,IData>>[m_size];&#xA;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;buffer [i] = new List&lt;IKVPairInstance&lt;IMK,IData>> ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// READ CHUNK&#xA;&#x9;&#x9;&#x9;&#x9;int count = 0;&#xA;&#x9;&#x9;&#x9;&#x9;while (input_instance.fetch_next (out bin_object) &amp;&amp; count &lt; CHUNK_SIZE) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IMK,IData> item = (IKVPairInstance&lt;IMK,IData>)bin_object;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.Input_key.Instance = item.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Bin_function.go ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int index = ((IIntegerInstance)this.Output_key.Instance).Value;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;buffer[index].Add(item);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;count++;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;sync_perform.wait ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// PERFORM&#xA;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Split_channel.Send (buffer [i], unit_ref [i], TAG_SPLIT_IMV);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;if (count &lt; CHUNK_SIZE)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end_iteration = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;// Inform the end of the first iteration&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; m_size; i++)&#xA;&#x9;&#x9;&#x9;&#x9;Split_channel.Send (new List&lt;IKVPairInstance&lt;IMK,IData>> (), unit_ref [i], TAG_SPLIT_IMV_FINISH);&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterReadSourceImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterReadSourceImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction/bin/1.0.0.0/IPartitionFunction.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterReadSourceImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterReadSource.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="120" x="81" y="89">
        <color b="0" g="128" r="0"/>
      </visualDescription>
      <port name="task_binding_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split" sRef="task_binding_split"/>
      </port>
      <port name="task_port_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_split"/>
      </port>
      <port name="source">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="source" sRef="source"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="task_binding_data"/>
      </port>
      <port name="task_port_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_data"/>
      </port>
      <port name="output_key_iterate">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_key" sRef="bin_function"/>
      </port>
      <port name="input_key_iterate">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="input_key" sRef="bin_function"/>
      </port>
      <parameter iname="IPartitionFunction" order="2" parid="bin_function" uname="partition_function" varid="BF"/>
      <parameter iname="IData" order="0" parid="input_map_key" uname="data" varid="IMK"/>
      <parameter iname="IData" order="1" parid="input_map_value" uname="data" varid="IMV"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="ISplitterWriteSinkImpl" nArgs="0">
      <slice isRef="task_binding_split">
        <originRef cRef="task_binding_split" iRef="ITaskBindingAdvance"/>
        <visualDescription h="10" w="10" x="91" y="0"/>
      </slice>
      <slice isRef="task_binding_data">
        <originRef cRef="task_binding_data" iRef="ITaskBindingData"/>
        <visualDescription h="10" w="10" x="33" y="0"/>
      </slice>
      <slice isRef="sink">
        <originRef cRef="sink" iRef="IClientBase"/>
        <visualDescription h="10" w="10" x="4" y="2"/>
      </slice>
      <slice isRef="split_channel">
        <originRef cRef="split_channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="9" y="23"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.channel.Binding;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.task.TaskBindingAdvance;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.task.TaskPortTypeAdvance;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl &#xA;{&#xA;&#x9;public abstract class BaseISplitterWriteSinkImpl: Synchronizer, BaseISplitterWriteSink&#xA;&#x9;{&#xA;&#x9;&#x9;static protected int FACET_REDUCE = 0;&#xA;&#x9;&#x9;static protected int FACET_MAP = 1;&#xA;&#x9;&#x9;static protected int FACET_SOURCE = 2;&#xA;&#x9;&#x9;static protected int FACET_SINLK = 3;&#xA;&#xA;&#x9;&#x9;private IChannel split_channel = null;&#xA;&#xA;&#x9;&#x9;protected IChannel Split_channel&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.split_channel == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.split_channel = (IChannel) Services.getPort(&quot;split_channel&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.split_channel;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IClientBase&lt;IPortTypeIterator> sink = null;&#xA;&#xA;&#x9;&#x9;protected IClientBase&lt;IPortTypeIterator> Sink&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.sink == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.sink = (IClientBase&lt;IPortTypeIterator>) Services.getPort(&quot;sink&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.sink;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private ITaskBindingAdvance task_binding_split = null;&#xA;&#x9;&#x9;protected ITaskBindingAdvance Task_binding_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_binding_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_binding_split = (ITaskBindingAdvance) Services.getPort(&quot;task_binding_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_binding_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;ITaskPortTypeAdvance> task_port_split = null;&#xA;&#x9;&#x9;public ITaskPort&lt;ITaskPortTypeAdvance> Task_port_split&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.task_port_split == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.task_port_split = (ITaskPort&lt;ITaskPortTypeAdvance>) Services.getPort(&quot;task_port_split&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.task_port_split;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseISplitterWriteSinkImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterWriteSinkImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.channel.Binding/bin/1.0.0.0/IChannel.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase/bin/1.0.0.0/IClientBase.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSinkInterfaceSplitter/bin/1.0.0.0/IPortTypeDataSinkInterfaceSplitter.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/BaseISplitterWriteOutput.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl&#xA;{&#xA;&#x9;public class ISplitterWriteSinkImpl : BaseISplitterWriteSinkImpl, ISplitterWriteSink&#xA;&#x9;{&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISplitterWriteSinkImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/ISplitterWriteSinkImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.connector.SplitterImpl/bin/1.0.0.0/BaseISplitterWriteSinkImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter/bin/1.0.0.0/ISplitterWriteOutput.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="125" x="716" y="171">
        <color b="0" g="128" r="0"/>
      </visualDescription>
      <port name="task_binding_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split" sRef="task_binding_split"/>
      </port>
      <port name="task_port_split">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_split"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="task_binding_data"/>
      </port>
      <port name="task_port_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_port" sRef="task_binding_data"/>
      </port>
      <port name="sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="sink" sRef="sink"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="ISplitterReduceCollectorImpl" multiple="true" private="false" replica="0" uRef="reduce_collector" visibleInterface="true">
      <super cRef="base" uRef="reduce_collector"/>
      <visualDescription h="40" w="137" x="150" y="412"/>
    </unit>
    <unit facet="0" iRef="ISplitterMapFeederImpl" multiple="true" private="false" replica="0" uRef="map_feeder" visibleInterface="true">
      <super cRef="base" uRef="map_feeder"/>
      <visualDescription h="40" w="182" x="613" y="412"/>
    </unit>
    <unit facet="0" iRef="ISplitterReadSourceImpl" multiple="false" private="false" replica="0" uRef="read_input" visibleInterface="true">
      <super cRef="base" uRef="read_input"/>
      <visualDescription h="40" w="127" x="179" y="234"/>
    </unit>
    <unit facet="0" iRef="ISplitterWriteSinkImpl" multiple="false" private="false" replica="0" uRef="write_output" visibleInterface="true">
      <super cRef="base" uRef="write_output"/>
      <visualDescription h="40" w="120" x="629" y="240"/>
    </unit>
  </componentInfo>
</component:component>