<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009fe4c5d67e08bb2f611906b19991fe71fdc4adca1fe544db4de144d873e0987efbeb2c64ecb40d5d63555635fdab19099bd8f22f6452378690bddf6fc9520020e14c22cb5dbbca968a363e2c820e93844dc6869723c747db016d110f768634436ececfc368ab941985b93bb7da2109c69a3a8b28f0b385d0192307f446cd21d7" isAbstract="false" kind="Application" name="SystemImpl" packagePath="mapreduce.gust.iterative.pr">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a9fbb5259f3e6eda602b9453c8ed8468018d5e9904fb1db67cb65b0319734253c21f99f9665f714a3e0bc2d8e504964b57106d7bc1b9af418ad8caa809f058c1c7b9f734eccbdf3a055fb55a4cd6e654816c9ee3b7ad5aaa0819af3d8d695000913e4f9aa73f7d58e62adb6613411b343f5e2d3bc57ab64c0ba21280e649ccaf" localRef="base" location="mapreduce.gust.iterative.pr.System/System.hpe" name="System" package="mapreduce.gust.iterative.pr" version="1.0.0.0">
        <visualDescription h="150" w="250" x="387" y="483">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="peer_0">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="peer_1">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="peer_2">
          <visualDescription h="20" w="20" x="51" y="2"/>
        </unitBounds>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="peer_3">
          <visualDescription h="20" w="20" x="74" y="2"/>
        </unitBounds>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="root">
          <visualDescription h="20" w="20" x="97" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <interface iRef="IPeer_0Impl" nArgs="0">
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterCollector"/>
        <visualDescription h="10" w="10" x="122" y="23"/>
      </slice>
      <slice isRef="source">
        <originRef cRef="source" iRef="IDataSourceGraph"/>
        <visualDescription h="10" w="10" x="123" y="12"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using mapreduce.gust.iterative.pr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace mapreduce.gust.iterative.pr.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_0Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_0 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;          /*  IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost> data_source = ((IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost>)(this.Services.getPort(&quot;data_source&quot;)));&#xA;            Thread go_data_source = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_source.Start(data_source);&#xA;            ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>> splitter = ((ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_source.Join();&#xA;            go_splitter.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_0Impl.cs" srcType="user" uri="mapreduce.gust.iterative.pr.SystemImpl/bin/1.0.0.0/IPeer_0Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="50" y="201">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="splitter"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="99" y="6"/>
        <slice pRef="collect_pairs" sRef="splitter"/>
      </port>
      <port name="task_binding_split_read_chunk_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_read_chunk" sRef="splitter"/>
      </port>
      <port name="platform_data_source">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_data_source" sRef="source"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="99" y="6"/>
        <slice pRef="input_data" sRef="source"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_1Impl" nArgs="0">
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterFeeder"/>
        <visualDescription h="10" w="10" x="2" y="22"/>
      </slice>
      <slice isRef="sink">
        <originRef cRef="sink" iRef="IDataSinkGraph"/>
        <visualDescription h="10" w="10" x="3" y="10"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using mapreduce.gust.iterative.pr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace mapreduce.gust.iterative.pr.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_1Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_1 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;         /*   IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost> data_sink = ((IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost>)(this.Services.getPort(&quot;data_sink&quot;)));&#xA;            Thread go_data_sink = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_sink.Start(data_sink);&#xA;            ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger> splitter = ((ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_sink.Join();&#xA;            go_splitter.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_1Impl.cs" srcType="user" uri="mapreduce.gust.iterative.pr.SystemImpl/bin/1.0.0.0/IPeer_1Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="183" y="206">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="input_pairs_map">
        <visualDescription h="10" w="10" x="65" y="6"/>
        <slice pRef="feed_pairs" sRef="splitter"/>
      </port>
      <port name="task_binding_split_chunk_ready_sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_chunk_ready" sRef="splitter"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="splitter"/>
      </port>
      <port name="platform_data_sink">
        <visualDescription h="10" w="10" x="92" y="5"/>
        <slice pRef="platform_data_sink" sRef="sink"/>
      </port>
      <port name="output_pairs">
        <visualDescription h="10" w="10" x="65" y="6"/>
        <slice pRef="output_data" sRef="sink"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_2Impl" nArgs="0">
      <slice isRef="reducer">
        <originRef cRef="reducer" iRef="IReducer"/>
        <visualDescription h="10" w="10" x="2" y="23"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterCollector"/>
        <visualDescription h="10" w="10" x="68" y="11"/>
      </slice>
      <slice isRef="shuffler">
        <originRef cRef="shuffler" iRef="IShufflerFeeder"/>
        <visualDescription h="10" w="10" x="68" y="35"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using mapreduce.gust.iterative.pr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace mapreduce.gust.iterative.pr.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_2Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_2 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;          /*  IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter> mapper = ((IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter>)(this.Services.getPort(&quot;mapper&quot;)));&#xA;            Thread go_mapper = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_mapper.Start(mapper);&#xA;            ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString> splitter = ((ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>> shuffler = ((IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>>)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;            Thread go_shuffler = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_mapper.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_2Impl.cs" srcType="user" uri="mapreduce.gust.iterative.pr.SystemImpl/bin/1.0.0.0/IPeer_2Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="326" y="195">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="global_intermediate_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="reducer"/>
      </port>
      <port name="output_pairs_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="reducer"/>
      </port>
      <port name="platform_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_reduce" sRef="reducer"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_reduce" sRef="reducer"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="splitter"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="splitter"/>
      </port>
      <port name="task_binding_split_read_chunk_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_read_chunk" sRef="splitter"/>
      </port>
      <port name="task_binding_shuffle_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_perform" sRef="shuffler"/>
      </port>
      <port name="task_binding_shuffle_chunk_ready">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_chunk_ready" sRef="shuffler"/>
      </port>
      <port name="global_intermediate_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="shuffler"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_3Impl" nArgs="0">
      <slice isRef="mapper">
        <originRef cRef="mapper" iRef="IMapper"/>
        <visualDescription h="10" w="10" x="77" y="19"/>
      </slice>
      <slice isRef="splitter">
        <originRef cRef="splitter" iRef="ISplitterFeeder"/>
        <visualDescription h="10" w="10" x="9" y="12"/>
      </slice>
      <slice isRef="shuffler">
        <originRef cRef="shuffler" iRef="IShufflerCollector"/>
        <visualDescription h="10" w="10" x="10" y="31"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using mapreduce.gust.iterative.pr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace mapreduce.gust.iterative.pr.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_3Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_3 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;           /* IReducer&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier> reducer = ((IReducer&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier>)(this.Services.getPort(&quot;reducer&quot;)));&#xA;            Thread go_reducer = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_reducer.Start(reducer);&#xA;            ISplitterReduceCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>, br.ufc.mdcc.hpcshelf.mapreduce.custom.TerminateFunction.ITerminateFunction&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger>> splitter = ((ISplitterReduceCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>, br.ufc.mdcc.hpcshelf.mapreduce.custom.TerminateFunction.ITerminateFunction&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger>>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerReduceFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger> shuffler = ((IShufflerReduceFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger>)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;            Thread go_shuffler = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_reducer.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_3Impl.cs" srcType="user" uri="mapreduce.gust.iterative.pr.SystemImpl/bin/1.0.0.0/IPeer_3Impl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="469" y="192">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="input_pairs_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="mapper"/>
      </port>
      <port name="local_intermediate_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="mapper"/>
      </port>
      <port name="platform_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_map" sRef="mapper"/>
      </port>
      <port name="task_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_map" sRef="mapper"/>
      </port>
      <port name="input_pairs_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="splitter"/>
      </port>
      <port name="task_binding_split_chunk_ready_sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_chunk_ready" sRef="splitter"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="splitter"/>
      </port>
      <port name="task_binding_shuffle_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_perform" sRef="shuffler"/>
      </port>
      <port name="task_binding_shuffle_read_chunk">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_read_chunk" sRef="shuffler"/>
      </port>
      <port name="local_intermediate_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="shuffler"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IRootImpl" nArgs="0">
      <slice isRef="workflow">
        <originRef cRef="workflow" iRef="IWorkflow"/>
        <visualDescription h="10" w="10" x="60" y="21"/>
      </slice>
      <slice isRef="application">
        <originRef cRef="application" iRef="IApplication"/>
        <visualDescription h="10" w="10" x="7" y="24"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using mapreduce.gust.iterative.pr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace mapreduce.gust.iterative.pr.SystemImpl {&#xA;    &#xA;    &#xA;    public class IRootImpl : br.ufc.pargo.hpe.kinds.Application, IRoot {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;&#x9;&#x9;/*&#x9;IWorkflow&lt;ISAFeHost> workflow = ((IWorkflow&lt;ISAFeHost>)(this.Services.getPort(&quot;workflow&quot;)));&#xA;            Thread go_workflow = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_workflow.Start(workflow);&#xA;&#x9;&#x9;&#x9;IApplication&lt;ISAFeHost> application = ((IApplication&lt;ISAFeHost>)(this.Services.getPort(&quot;application&quot;)));&#xA;            Thread go_application = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_application.Start(application);&#xA;            go_workflow.Join();&#xA;            go_application.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IRootImpl.cs" srcType="user" uri="mapreduce.gust.iterative.pr.SystemImpl/bin/1.0.0.0/IRootImpl.dll" versionId="1.0.0.0"/>
      </sources>
      <visualDescription h="80" w="120" x="619" y="184">
        <color b="20" g="20" r="20"/>
      </visualDescription>
      <port name="task_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_map" sRef="workflow"/>
      </port>
      <port name="task_binding_split_read_chunk_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_read_chunk_reduce" sRef="workflow"/>
      </port>
      <port name="task_binding_shuffle_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_perform" sRef="workflow"/>
      </port>
      <port name="task_binding_split_read_chunk_source">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_read_chunk_source" sRef="workflow"/>
      </port>
      <port name="task_binding_split_chunk_ready_sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_chunk_ready_sink" sRef="workflow"/>
      </port>
      <port name="task_binding_shuffle_chunk_ready">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_chunk_ready" sRef="workflow"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_reduce" sRef="workflow"/>
      </port>
      <port name="task_binding_split_perform">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_perform" sRef="workflow"/>
      </port>
      <port name="task_binding_split_chunk_ready_map">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_chunk_ready_map" sRef="workflow"/>
      </port>
      <port name="task_binding_shuffle_read_chunk">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_shuffle_read_chunk" sRef="workflow"/>
      </port>
      <port name="platform_SAFe">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_SAFe" sRef="workflow"/>
      </port>
      <port name="platform_SAFe">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_SAFe" sRef="application"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IPeer_0Impl" multiple="false" private="false" replica="0" uRef="peer_0" visibleInterface="true">
      <super cRef="base" uRef="peer_0"/>
      <visualDescription h="90" w="130" x="77" y="322"/>
    </unit>
    <unit facet="0" iRef="IPeer_1Impl" multiple="false" private="false" replica="0" uRef="peer_1" visibleInterface="true">
      <super cRef="base" uRef="peer_1"/>
      <visualDescription h="90" w="130" x="213" y="317"/>
    </unit>
    <unit facet="0" iRef="IPeer_2Impl" multiple="false" private="false" replica="0" uRef="peer_2" visibleInterface="true">
      <super cRef="base" uRef="peer_2"/>
      <visualDescription h="90" w="130" x="345" y="319"/>
    </unit>
    <unit facet="0" iRef="IPeer_3Impl" multiple="false" private="false" replica="0" uRef="peer_3" visibleInterface="true">
      <super cRef="base" uRef="peer_3"/>
      <visualDescription h="90" w="130" x="478" y="318"/>
    </unit>
    <unit facet="0" iRef="IRootImpl" multiple="false" private="false" replica="0" uRef="root" visibleInterface="true">
      <super cRef="base" uRef="root"/>
      <visualDescription h="90" w="130" x="616" y="321"/>
    </unit>
  </componentInfo>
</component:component>